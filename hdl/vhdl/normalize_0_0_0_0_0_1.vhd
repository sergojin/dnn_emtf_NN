-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity normalize_0_0_0_0_0_1 is
port (
    ap_ready : OUT STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_9_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (23 downto 0) );
end;


architecture behav of normalize_0_0_0_0_0_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv37_1B40 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000001101101000000";
    constant ap_const_lv37_1687 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000001011010000111";
    constant ap_const_lv36_F1D : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000111100011101";
    constant ap_const_lv37_1390 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000001001110010000";
    constant ap_const_lv37_1706 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000001011100000110";
    constant ap_const_lv37_1217 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000001001000010111";
    constant ap_const_lv36_CDE : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000110011011110";
    constant ap_const_lv37_19F8 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000001100111111000";
    constant ap_const_lv36_E86 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000111010000110";
    constant ap_const_lv37_10D7 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000001000011010111";
    constant ap_const_lv37_1D10000 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000001110100010000000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv37_1FF68E4000 : STD_LOGIC_VECTOR (36 downto 0) := "1111111110110100011100100000000000000";
    constant ap_const_lv37_1FF057C000 : STD_LOGIC_VECTOR (36 downto 0) := "1111111110000010101111100000000000000";
    constant ap_const_lv37_1FF9DBA000 : STD_LOGIC_VECTOR (36 downto 0) := "1111111111001110110111010000000000000";
    constant ap_const_lv36_FF16CE000 : STD_LOGIC_VECTOR (35 downto 0) := "111111110001011011001110000000000000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv36_FF76D0000 : STD_LOGIC_VECTOR (35 downto 0) := "111111110111011011010000000000000000";
    constant ap_const_lv37_155C000 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000001010101011100000000000000";
    constant ap_const_lv37_512A000 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000101000100101010000000000000";
    constant ap_const_lv36_5B26000 : STD_LOGIC_VECTOR (35 downto 0) := "000000000101101100100110000000000000";
    constant ap_const_lv37_1FF461A000 : STD_LOGIC_VECTOR (36 downto 0) := "1111111110100011000011010000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal mul_ln1192_fu_154_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_4_fu_155_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_14_fu_156_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_6_fu_157_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_5_fu_158_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_7_fu_159_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_15_fu_160_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_3_fu_161_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_16_fu_162_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_8_fu_163_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_fu_154_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln1192_fu_640_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal mul_ln1192_3_fu_161_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln1192_15_fu_661_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal mul_ln1192_4_fu_155_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln1192_16_fu_682_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal mul_ln1192_5_fu_158_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln1192_17_fu_703_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal mul_ln1192_14_fu_156_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln1192_18_fu_724_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_118_fu_730_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln1192_15_fu_160_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln1192_19_fu_749_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_119_fu_755_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln1192_6_fu_157_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln1192_20_fu_774_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal mul_ln1192_7_fu_159_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln1192_21_fu_795_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal mul_ln1192_16_fu_162_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln1192_22_fu_816_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_120_fu_822_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln1192_8_fu_163_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln1192_23_fu_841_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln708_fu_740_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_11_fu_765_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_12_fu_832_p1 : STD_LOGIC_VECTOR (23 downto 0);


begin



    add_ln1192_15_fu_661_p2 <= std_logic_vector(unsigned(mul_ln1192_3_fu_161_p2) + unsigned(ap_const_lv37_1FF68E4000));
    add_ln1192_16_fu_682_p2 <= std_logic_vector(unsigned(mul_ln1192_4_fu_155_p2) + unsigned(ap_const_lv37_1FF057C000));
    add_ln1192_17_fu_703_p2 <= std_logic_vector(unsigned(mul_ln1192_5_fu_158_p2) + unsigned(ap_const_lv37_1FF9DBA000));
    add_ln1192_18_fu_724_p2 <= std_logic_vector(unsigned(mul_ln1192_14_fu_156_p2) + unsigned(ap_const_lv36_FF16CE000));
    add_ln1192_19_fu_749_p2 <= std_logic_vector(unsigned(mul_ln1192_15_fu_160_p2) + unsigned(ap_const_lv36_FF76D0000));
    add_ln1192_20_fu_774_p2 <= std_logic_vector(unsigned(mul_ln1192_6_fu_157_p2) + unsigned(ap_const_lv37_155C000));
    add_ln1192_21_fu_795_p2 <= std_logic_vector(unsigned(mul_ln1192_7_fu_159_p2) + unsigned(ap_const_lv37_512A000));
    add_ln1192_22_fu_816_p2 <= std_logic_vector(unsigned(mul_ln1192_16_fu_162_p2) + unsigned(ap_const_lv36_5B26000));
    add_ln1192_23_fu_841_p2 <= std_logic_vector(unsigned(mul_ln1192_8_fu_163_p2) + unsigned(ap_const_lv37_1FF461A000));
    add_ln1192_fu_640_p2 <= std_logic_vector(unsigned(mul_ln1192_fu_154_p2) + unsigned(ap_const_lv37_1D10000));
    ap_ready <= ap_const_logic_1;
    ap_return_0 <= add_ln1192_fu_640_p2(36 downto 13);
    ap_return_1 <= add_ln1192_15_fu_661_p2(36 downto 13);
    ap_return_2 <= add_ln1192_16_fu_682_p2(36 downto 13);
    ap_return_3 <= add_ln1192_17_fu_703_p2(36 downto 13);
    ap_return_4 <= sext_ln708_fu_740_p1;
    ap_return_5 <= sext_ln708_11_fu_765_p1;
    ap_return_6 <= add_ln1192_20_fu_774_p2(36 downto 13);
    ap_return_7 <= add_ln1192_21_fu_795_p2(36 downto 13);
    ap_return_8 <= sext_ln708_12_fu_832_p1;
    ap_return_9 <= add_ln1192_23_fu_841_p2(36 downto 13);
    mul_ln1192_14_fu_156_p0 <= data_4_V_read;
    mul_ln1192_14_fu_156_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_14_fu_156_p0) * signed('0' &ap_const_lv36_F1D))), 36));
    mul_ln1192_15_fu_160_p0 <= data_5_V_read;
    mul_ln1192_15_fu_160_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_15_fu_160_p0) * signed('0' &ap_const_lv36_CDE))), 36));
    mul_ln1192_16_fu_162_p0 <= data_8_V_read;
    mul_ln1192_16_fu_162_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_16_fu_162_p0) * signed('0' &ap_const_lv36_E86))), 36));
    mul_ln1192_3_fu_161_p0 <= data_1_V_read;
    mul_ln1192_3_fu_161_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_3_fu_161_p0) * signed('0' &ap_const_lv37_19F8))), 37));
    mul_ln1192_4_fu_155_p0 <= data_2_V_read;
    mul_ln1192_4_fu_155_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_4_fu_155_p0) * signed('0' &ap_const_lv37_1687))), 37));
    mul_ln1192_5_fu_158_p0 <= data_3_V_read;
    mul_ln1192_5_fu_158_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_5_fu_158_p0) * signed('0' &ap_const_lv37_1706))), 37));
    mul_ln1192_6_fu_157_p0 <= data_6_V_read;
    mul_ln1192_6_fu_157_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_6_fu_157_p0) * signed('0' &ap_const_lv37_1390))), 37));
    mul_ln1192_7_fu_159_p0 <= data_7_V_read;
    mul_ln1192_7_fu_159_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_7_fu_159_p0) * signed('0' &ap_const_lv37_1217))), 37));
    mul_ln1192_8_fu_163_p0 <= data_9_V_read;
    mul_ln1192_8_fu_163_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_8_fu_163_p0) * signed('0' &ap_const_lv37_10D7))), 37));
    mul_ln1192_fu_154_p0 <= data_0_V_read;
    mul_ln1192_fu_154_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_fu_154_p0) * signed('0' &ap_const_lv37_1B40))), 37));
        sext_ln708_11_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_119_fu_755_p4),24));

        sext_ln708_12_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_120_fu_822_p4),24));

        sext_ln708_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_118_fu_730_p4),24));

    tmp_118_fu_730_p4 <= add_ln1192_18_fu_724_p2(35 downto 13);
    tmp_119_fu_755_p4 <= add_ln1192_19_fu_749_p2(35 downto 13);
    tmp_120_fu_822_p4 <= add_ln1192_22_fu_816_p2(35 downto 13);
end behav;
