-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity emtfptnn is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input1_0_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_1_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_2_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_3_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_4_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_5_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_6_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_7_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_8_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_9_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_10_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_11_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_12_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_13_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_14_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_15_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_16_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_17_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_18_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_19_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_20_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_21_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_22_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_23_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_24_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_25_V : IN STD_LOGIC_VECTOR (12 downto 0);
 layer12_out_1_V_ap_vld   input1_26_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_27_V : IN STD_LOGIC_VECTOR (12 downto 0);
    input1_28_V : IN STD_LOGIC_VECTOR (12 downto 0);
    layer12_out_0_V : OUT STD_LOGIC_VECTOR (7 downto 0);
    layer12_out_0_V_ap_vld : OUT STD_LOGIC;
    layer12_out_1_V : OUT STD_LOGIC_VECTOR (6 downto 0);
    layer12_out_1_V_ap_vld : OUT STD_LOGIC;
    const_size_in_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    const_size_in_1_ap_vld : OUT STD_LOGIC;
    const_size_out_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    const_size_out_1_ap_vld : OUT STD_LOGIC );
end;


architecture behav of emtfptnn is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "emtfptnn,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7vx690t-ffg1927-2,HLS_INPUT_CLOCK=7.692000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.795000,HLS_SYN_LAT=13,HLS_SYN_TPT=1,HLS_SYN_MEM=18,HLS_SYN_DSP=993,HLS_SYN_FF=13555,HLS_SYN_LUT=61706,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_1D : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011101";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal layer2_out_0_V_reg_946 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_1_V_reg_951 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_2_V_reg_956 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_3_V_reg_961 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_4_V_reg_966 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_5_V_reg_971 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_6_V_reg_976 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_7_V_reg_981 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_8_V_reg_986 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_9_V_reg_991 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_10_V_reg_996 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_11_V_reg_1001 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_12_V_reg_1006 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_13_V_reg_1011 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_14_V_reg_1016 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_15_V_reg_1021 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_16_V_reg_1026 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_17_V_reg_1031 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_18_V_reg_1036 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_19_V_reg_1041 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_20_V_reg_1046 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_21_V_reg_1051 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_22_V_reg_1056 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_23_V_reg_1061 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_24_V_reg_1066 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_25_V_reg_1071 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_26_V_reg_1076 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_27_V_reg_1081 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer2_out_28_V_reg_1086 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_0_V_reg_1091 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_1_V_reg_1096 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_2_V_reg_1101 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_3_V_reg_1106 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_4_V_reg_1111 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_5_V_reg_1116 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_6_V_reg_1121 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_7_V_reg_1126 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_8_V_reg_1131 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_9_V_reg_1136 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_10_V_reg_1141 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_11_V_reg_1146 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_12_V_reg_1151 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_13_V_reg_1156 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_14_V_reg_1161 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_15_V_reg_1166 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_16_V_reg_1171 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_17_V_reg_1176 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_18_V_reg_1181 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer3_out_19_V_reg_1186 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_0_V_reg_1191 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_1_V_reg_1196 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_2_V_reg_1201 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_3_V_reg_1206 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_4_V_reg_1211 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_5_V_reg_1216 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_6_V_reg_1221 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_7_V_reg_1226 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_8_V_reg_1231 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_9_V_reg_1236 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_10_V_reg_1241 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_11_V_reg_1246 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_12_V_reg_1251 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_13_V_reg_1256 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_14_V_reg_1261 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_15_V_reg_1266 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_16_V_reg_1271 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_17_V_reg_1276 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_18_V_reg_1281 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer6_out_19_V_reg_1286 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer7_out_0_V_reg_1291 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer7_out_1_V_reg_1296 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer7_out_2_V_reg_1301 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer7_out_3_V_reg_1306 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer7_out_4_V_reg_1311 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer7_out_5_V_reg_1316 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer7_out_6_V_reg_1321 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer7_out_7_V_reg_1326 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer7_out_8_V_reg_1331 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer7_out_9_V_reg_1336 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer7_out_10_V_reg_1341 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer7_out_11_V_reg_1346 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer7_out_12_V_reg_1351 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer7_out_13_V_reg_1356 : STD_LOGIC_VECTOR (23 downto 0);
    signal layer7_out_14_V_reg_1361 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_4 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_5 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_6 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_7 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_8 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_9 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_11 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_12 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_13 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_14 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_15 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_16 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_17 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_18 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_19 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call99 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call99 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call99 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call99 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call99 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call99 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call99 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call99 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call99 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call99 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call99 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call99 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call99 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call99 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp74 : BOOLEAN;
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_4 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_5 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_6 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_7 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_8 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_9 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_11 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_12 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_13 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_14 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call141 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call141 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call141 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call141 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call141 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call141 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call141 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call141 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call141 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call141 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call141 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call141 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call141 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call141 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp121 : BOOLEAN;
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_start : STD_LOGIC;
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_done : STD_LOGIC;
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_idle : STD_LOGIC;
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_ready : STD_LOGIC;
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_4 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_5 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_6 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_7 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_8 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_9 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_11 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_12 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_13 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_14 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_15 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_16 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_17 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_18 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_19 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_start : STD_LOGIC;
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_done : STD_LOGIC;
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_idle : STD_LOGIC;
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_ready : STD_LOGIC;
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_4 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_5 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_6 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_7 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_8 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_9 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_11 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_12 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_13 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_14 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config11_0_0_0_fu_428_ap_return_0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config11_0_0_0_fu_428_ap_return_1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config11_0_0_0_fu_428_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call173 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call173 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call173 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call173 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call173 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call173 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call173 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call173 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call173 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call173 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call173 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call173 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call173 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call173 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp156 : BOOLEAN;
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_ready : STD_LOGIC;
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_0 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_1 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_2 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_3 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_4 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_5 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_6 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_7 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_8 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_9 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_10 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_11 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_12 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_13 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_14 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_15 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_16 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_17 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_18 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_19 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_20 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_21 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_22 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_23 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_24 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_25 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_26 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_27 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_28 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret_relu_ap_fixed_24_8_5_3_0_ap_uint_8_relu_config12_s_fu_509_ap_ready : STD_LOGIC;
    signal call_ret_relu_ap_fixed_24_8_5_3_0_ap_uint_8_relu_config12_s_fu_509_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_relu_ap_fixed_24_8_5_3_0_ap_uint_8_relu_config12_s_fu_509_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_start_reg : STD_LOGIC := '0';
    signal grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to12 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_22_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_27_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_28_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component dense_latency_ap_fixed_ap_fixed_config11_0_0_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_22_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_27_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        data_28_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component relu_ap_fixed_24_8_5_3_0_ap_uint_8_relu_config12_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324 : component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => layer2_out_0_V_reg_946,
        data_1_V_read => layer2_out_1_V_reg_951,
        data_2_V_read => layer2_out_2_V_reg_956,
        data_3_V_read => layer2_out_3_V_reg_961,
        data_4_V_read => layer2_out_4_V_reg_966,
        data_5_V_read => layer2_out_5_V_reg_971,
        data_6_V_read => layer2_out_6_V_reg_976,
        data_7_V_read => layer2_out_7_V_reg_981,
        data_8_V_read => layer2_out_8_V_reg_986,
        data_9_V_read => layer2_out_9_V_reg_991,
        data_10_V_read => layer2_out_10_V_reg_996,
        data_11_V_read => layer2_out_11_V_reg_1001,
        data_12_V_read => layer2_out_12_V_reg_1006,
        data_13_V_read => layer2_out_13_V_reg_1011,
        data_14_V_read => layer2_out_14_V_reg_1016,
        data_15_V_read => layer2_out_15_V_reg_1021,
        data_16_V_read => layer2_out_16_V_reg_1026,
        data_17_V_read => layer2_out_17_V_reg_1031,
        data_18_V_read => layer2_out_18_V_reg_1036,
        data_19_V_read => layer2_out_19_V_reg_1041,
        data_20_V_read => layer2_out_20_V_reg_1046,
        data_21_V_read => layer2_out_21_V_reg_1051,
        data_22_V_read => layer2_out_22_V_reg_1056,
        data_23_V_read => layer2_out_23_V_reg_1061,
        data_24_V_read => layer2_out_24_V_reg_1066,
        data_25_V_read => layer2_out_25_V_reg_1071,
        data_26_V_read => layer2_out_26_V_reg_1076,
        data_27_V_read => layer2_out_27_V_reg_1081,
        data_28_V_read => layer2_out_28_V_reg_1086,
        ap_return_0 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_0,
        ap_return_1 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_1,
        ap_return_2 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_2,
        ap_return_3 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_3,
        ap_return_4 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_4,
        ap_return_5 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_5,
        ap_return_6 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_6,
        ap_return_7 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_7,
        ap_return_8 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_8,
        ap_return_9 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_9,
        ap_return_10 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_10,
        ap_return_11 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_11,
        ap_return_12 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_12,
        ap_return_13 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_13,
        ap_return_14 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_14,
        ap_return_15 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_15,
        ap_return_16 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_16,
        ap_return_17 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_17,
        ap_return_18 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_18,
        ap_return_19 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_19,
        ap_ce => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_ce);

    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357 : component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => layer6_out_0_V_reg_1191,
        data_1_V_read => layer6_out_1_V_reg_1196,
        data_2_V_read => layer6_out_2_V_reg_1201,
        data_3_V_read => layer6_out_3_V_reg_1206,
        data_4_V_read => layer6_out_4_V_reg_1211,
        data_5_V_read => layer6_out_5_V_reg_1216,
        data_6_V_read => layer6_out_6_V_reg_1221,
        data_7_V_read => layer6_out_7_V_reg_1226,
        data_8_V_read => layer6_out_8_V_reg_1231,
        data_9_V_read => layer6_out_9_V_reg_1236,
        data_10_V_read => layer6_out_10_V_reg_1241,
        data_11_V_read => layer6_out_11_V_reg_1246,
        data_12_V_read => layer6_out_12_V_reg_1251,
        data_13_V_read => layer6_out_13_V_reg_1256,
        data_14_V_read => layer6_out_14_V_reg_1261,
        data_15_V_read => layer6_out_15_V_reg_1266,
        data_16_V_read => layer6_out_16_V_reg_1271,
        data_17_V_read => layer6_out_17_V_reg_1276,
        data_18_V_read => layer6_out_18_V_reg_1281,
        data_19_V_read => layer6_out_19_V_reg_1286,
        ap_return_0 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_0,
        ap_return_1 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_1,
        ap_return_2 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_2,
        ap_return_3 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_3,
        ap_return_4 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_4,
        ap_return_5 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_5,
        ap_return_6 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_6,
        ap_return_7 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_7,
        ap_return_8 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_8,
        ap_return_9 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_9,
        ap_return_10 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_10,
        ap_return_11 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_11,
        ap_return_12 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_12,
        ap_return_13 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_13,
        ap_return_14 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_14,
        ap_ce => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_ce);

    grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381 : component tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_start,
        ap_done => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_done,
        ap_idle => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_idle,
        ap_ready => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_ready,
        data_0_V_read => layer3_out_0_V_reg_1091,
        data_1_V_read => layer3_out_1_V_reg_1096,
        data_2_V_read => layer3_out_2_V_reg_1101,
        data_3_V_read => layer3_out_3_V_reg_1106,
        data_4_V_read => layer3_out_4_V_reg_1111,
        data_5_V_read => layer3_out_5_V_reg_1116,
        data_6_V_read => layer3_out_6_V_reg_1121,
        data_7_V_read => layer3_out_7_V_reg_1126,
        data_8_V_read => layer3_out_8_V_reg_1131,
        data_9_V_read => layer3_out_9_V_reg_1136,
        data_10_V_read => layer3_out_10_V_reg_1141,
        data_11_V_read => layer3_out_11_V_reg_1146,
        data_12_V_read => layer3_out_12_V_reg_1151,
        data_13_V_read => layer3_out_13_V_reg_1156,
        data_14_V_read => layer3_out_14_V_reg_1161,
        data_15_V_read => layer3_out_15_V_reg_1166,
        data_16_V_read => layer3_out_16_V_reg_1171,
        data_17_V_read => layer3_out_17_V_reg_1176,
        data_18_V_read => layer3_out_18_V_reg_1181,
        data_19_V_read => layer3_out_19_V_reg_1186,
        ap_return_0 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_0,
        ap_return_1 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_1,
        ap_return_2 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_2,
        ap_return_3 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_3,
        ap_return_4 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_4,
        ap_return_5 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_5,
        ap_return_6 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_6,
        ap_return_7 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_7,
        ap_return_8 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_8,
        ap_return_9 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_9,
        ap_return_10 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_10,
        ap_return_11 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_11,
        ap_return_12 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_12,
        ap_return_13 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_13,
        ap_return_14 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_14,
        ap_return_15 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_15,
        ap_return_16 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_16,
        ap_return_17 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_17,
        ap_return_18 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_18,
        ap_return_19 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_19);

    grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407 : component tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_start,
        ap_done => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_done,
        ap_idle => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_idle,
        ap_ready => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_ready,
        data_0_V_read => layer7_out_0_V_reg_1291,
        data_1_V_read => layer7_out_1_V_reg_1296,
        data_2_V_read => layer7_out_2_V_reg_1301,
        data_3_V_read => layer7_out_3_V_reg_1306,
        data_4_V_read => layer7_out_4_V_reg_1311,
        data_5_V_read => layer7_out_5_V_reg_1316,
        data_6_V_read => layer7_out_6_V_reg_1321,
        data_7_V_read => layer7_out_7_V_reg_1326,
        data_8_V_read => layer7_out_8_V_reg_1331,
        data_9_V_read => layer7_out_9_V_reg_1336,
        data_10_V_read => layer7_out_10_V_reg_1341,
        data_11_V_read => layer7_out_11_V_reg_1346,
        data_12_V_read => layer7_out_12_V_reg_1351,
        data_13_V_read => layer7_out_13_V_reg_1356,
        data_14_V_read => layer7_out_14_V_reg_1361,
        ap_return_0 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_0,
        ap_return_1 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_1,
        ap_return_2 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_2,
        ap_return_3 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_3,
        ap_return_4 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_4,
        ap_return_5 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_5,
        ap_return_6 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_6,
        ap_return_7 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_7,
        ap_return_8 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_8,
        ap_return_9 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_9,
        ap_return_10 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_10,
        ap_return_11 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_11,
        ap_return_12 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_12,
        ap_return_13 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_13,
        ap_return_14 => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_14);

    grp_dense_latency_ap_fixed_ap_fixed_config11_0_0_0_fu_428 : component dense_latency_ap_fixed_ap_fixed_config11_0_0_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_0,
        data_1_V_read => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_1,
        data_2_V_read => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_2,
        data_3_V_read => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_3,
        data_4_V_read => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_4,
        data_5_V_read => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_5,
        data_6_V_read => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_6,
        data_7_V_read => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_7,
        data_8_V_read => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_8,
        data_9_V_read => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_9,
        data_10_V_read => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_10,
        data_11_V_read => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_11,
        data_12_V_read => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_12,
        data_13_V_read => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_13,
        data_14_V_read => grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_return_14,
        ap_return_0 => grp_dense_latency_ap_fixed_ap_fixed_config11_0_0_0_fu_428_ap_return_0,
        ap_return_1 => grp_dense_latency_ap_fixed_ap_fixed_config11_0_0_0_fu_428_ap_return_1,
        ap_ce => grp_dense_latency_ap_fixed_ap_fixed_config11_0_0_0_fu_428_ap_ce);

    call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447 : component normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s
    port map (
        ap_ready => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_ready,
        data_0_V_read => input1_0_V,
        data_1_V_read => input1_1_V,
        data_2_V_read => input1_2_V,
        data_3_V_read => input1_3_V,
        data_4_V_read => input1_4_V,
        data_5_V_read => input1_5_V,
        data_6_V_read => input1_6_V,
        data_7_V_read => input1_7_V,
        data_8_V_read => input1_8_V,
        data_9_V_read => input1_9_V,
        data_10_V_read => input1_10_V,
        data_11_V_read => input1_11_V,
        data_12_V_read => input1_12_V,
        data_13_V_read => input1_13_V,
        data_14_V_read => input1_14_V,
        data_15_V_read => input1_15_V,
        data_16_V_read => input1_16_V,
        data_17_V_read => input1_17_V,
        data_18_V_read => input1_18_V,
        data_19_V_read => input1_19_V,
        data_20_V_read => input1_20_V,
        data_21_V_read => input1_21_V,
        data_22_V_read => input1_22_V,
        data_23_V_read => input1_23_V,
        data_24_V_read => input1_24_V,
        data_25_V_read => input1_25_V,
        data_26_V_read => input1_26_V,
        data_27_V_read => input1_27_V,
        data_28_V_read => input1_28_V,
        ap_return_0 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_0,
        ap_return_1 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_1,
        ap_return_2 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_2,
        ap_return_3 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_3,
        ap_return_4 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_4,
        ap_return_5 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_5,
        ap_return_6 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_6,
        ap_return_7 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_7,
        ap_return_8 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_8,
        ap_return_9 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_9,
        ap_return_10 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_10,
        ap_return_11 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_11,
        ap_return_12 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_12,
        ap_return_13 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_13,
        ap_return_14 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_14,
        ap_return_15 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_15,
        ap_return_16 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_16,
        ap_return_17 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_17,
        ap_return_18 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_18,
        ap_return_19 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_19,
        ap_return_20 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_20,
        ap_return_21 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_21,
        ap_return_22 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_22,
        ap_return_23 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_23,
        ap_return_24 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_24,
        ap_return_25 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_25,
        ap_return_26 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_26,
        ap_return_27 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_27,
        ap_return_28 => call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_28);

    call_ret_relu_ap_fixed_24_8_5_3_0_ap_uint_8_relu_config12_s_fu_509 : component relu_ap_fixed_24_8_5_3_0_ap_uint_8_relu_config12_s
    port map (
        ap_ready => call_ret_relu_ap_fixed_24_8_5_3_0_ap_uint_8_relu_config12_s_fu_509_ap_ready,
        data_0_V_read => grp_dense_latency_ap_fixed_ap_fixed_config11_0_0_0_fu_428_ap_return_0,
        data_1_V_read => grp_dense_latency_ap_fixed_ap_fixed_config11_0_0_0_fu_428_ap_return_1,
        ap_return_0 => call_ret_relu_ap_fixed_24_8_5_3_0_ap_uint_8_relu_config12_s_fu_509_ap_return_0,
        ap_return_1 => call_ret_relu_ap_fixed_24_8_5_3_0_ap_uint_8_relu_config12_s_fu_509_ap_return_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
                    grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_ready = ap_const_logic_1)) then 
                    grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
                    grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_ready = ap_const_logic_1)) then 
                    grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                layer2_out_0_V_reg_946 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_0;
                layer2_out_10_V_reg_996 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_10;
                layer2_out_11_V_reg_1001 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_11;
                layer2_out_12_V_reg_1006 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_12;
                layer2_out_13_V_reg_1011 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_13;
                layer2_out_14_V_reg_1016 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_14;
                layer2_out_15_V_reg_1021 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_15;
                layer2_out_16_V_reg_1026 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_16;
                layer2_out_17_V_reg_1031 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_17;
                layer2_out_18_V_reg_1036 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_18;
                layer2_out_19_V_reg_1041 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_19;
                layer2_out_1_V_reg_951 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_1;
                layer2_out_20_V_reg_1046 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_20;
                layer2_out_21_V_reg_1051 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_21;
                layer2_out_22_V_reg_1056 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_22;
                layer2_out_23_V_reg_1061 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_23;
                layer2_out_24_V_reg_1066 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_24;
                layer2_out_25_V_reg_1071 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_25;
                layer2_out_26_V_reg_1076 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_26;
                layer2_out_27_V_reg_1081 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_27;
                layer2_out_28_V_reg_1086 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_28;
                layer2_out_2_V_reg_956 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_2;
                layer2_out_3_V_reg_961 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_3;
                layer2_out_4_V_reg_966 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_4;
                layer2_out_5_V_reg_971 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_5;
                layer2_out_6_V_reg_976 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_6;
                layer2_out_7_V_reg_981 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_7;
                layer2_out_8_V_reg_986 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_8;
                layer2_out_9_V_reg_991 <= call_ret1_normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_447_ap_return_9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                layer3_out_0_V_reg_1091 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_0;
                layer3_out_10_V_reg_1141 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_10;
                layer3_out_11_V_reg_1146 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_11;
                layer3_out_12_V_reg_1151 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_12;
                layer3_out_13_V_reg_1156 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_13;
                layer3_out_14_V_reg_1161 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_14;
                layer3_out_15_V_reg_1166 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_15;
                layer3_out_16_V_reg_1171 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_16;
                layer3_out_17_V_reg_1176 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_17;
                layer3_out_18_V_reg_1181 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_18;
                layer3_out_19_V_reg_1186 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_19;
                layer3_out_1_V_reg_1096 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_1;
                layer3_out_2_V_reg_1101 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_2;
                layer3_out_3_V_reg_1106 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_3;
                layer3_out_4_V_reg_1111 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_4;
                layer3_out_5_V_reg_1116 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_5;
                layer3_out_6_V_reg_1121 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_6;
                layer3_out_7_V_reg_1126 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_7;
                layer3_out_8_V_reg_1131 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_8;
                layer3_out_9_V_reg_1136 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_return_9;
                layer6_out_0_V_reg_1191 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_0;
                layer6_out_10_V_reg_1241 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_10;
                layer6_out_11_V_reg_1246 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_11;
                layer6_out_12_V_reg_1251 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_12;
                layer6_out_13_V_reg_1256 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_13;
                layer6_out_14_V_reg_1261 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_14;
                layer6_out_15_V_reg_1266 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_15;
                layer6_out_16_V_reg_1271 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_16;
                layer6_out_17_V_reg_1276 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_17;
                layer6_out_18_V_reg_1281 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_18;
                layer6_out_19_V_reg_1286 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_19;
                layer6_out_1_V_reg_1196 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_1;
                layer6_out_2_V_reg_1201 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_2;
                layer6_out_3_V_reg_1206 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_3;
                layer6_out_4_V_reg_1211 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_4;
                layer6_out_5_V_reg_1216 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_5;
                layer6_out_6_V_reg_1221 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_6;
                layer6_out_7_V_reg_1226 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_7;
                layer6_out_8_V_reg_1231 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_8;
                layer6_out_9_V_reg_1236 <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_return_9;
                layer7_out_0_V_reg_1291 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_0;
                layer7_out_10_V_reg_1341 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_10;
                layer7_out_11_V_reg_1346 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_11;
                layer7_out_12_V_reg_1351 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_12;
                layer7_out_13_V_reg_1356 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_13;
                layer7_out_14_V_reg_1361 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_14;
                layer7_out_1_V_reg_1296 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_1;
                layer7_out_2_V_reg_1301 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_2;
                layer7_out_3_V_reg_1306 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_3;
                layer7_out_4_V_reg_1311 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_4;
                layer7_out_5_V_reg_1316 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_5;
                layer7_out_6_V_reg_1321 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_6;
                layer7_out_7_V_reg_1326 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_7;
                layer7_out_8_V_reg_1331 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_8;
                layer7_out_9_V_reg_1336 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_return_9;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp121_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp121 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp156_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp156 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp74_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp74 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call141_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call141 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call173_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call173 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call99_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call99 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to12_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to12 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to12)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to12 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    const_size_in_1 <= ap_const_lv16_1D;

    const_size_in_1_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            const_size_in_1_ap_vld <= ap_const_logic_1;
        else 
            const_size_in_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    const_size_out_1 <= ap_const_lv16_2;

    const_size_out_1_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            const_size_out_1_ap_vld <= ap_const_logic_1;
        else 
            const_size_out_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp74)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp74) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_324_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp121)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp121) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_357_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_ap_fixed_ap_fixed_config11_0_0_0_fu_428_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp156)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp156) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_dense_latency_ap_fixed_ap_fixed_config11_0_0_0_fu_428_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_ap_fixed_ap_fixed_config11_0_0_0_fu_428_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_start <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config10_s_fu_407_ap_start_reg;
    grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_start <= grp_tanh_ap_fixed_ap_fixed_24_8_5_3_0_tanh_config6_s_fu_381_ap_start_reg;
    layer12_out_0_V <= call_ret_relu_ap_fixed_24_8_5_3_0_ap_uint_8_relu_config12_s_fu_509_ap_return_0;

    layer12_out_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            layer12_out_0_V_ap_vld <= ap_const_logic_1;
        else 
            layer12_out_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer12_out_1_V <= call_ret_relu_ap_fixed_24_8_5_3_0_ap_uint_8_relu_config12_s_fu_509_ap_return_1(6 downto 0);

    layer12_out_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            layer12_out_1_V_ap_vld <= ap_const_logic_1;
        else 
            layer12_out_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
