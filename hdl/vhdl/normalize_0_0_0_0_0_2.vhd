-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity normalize_0_0_0_0_0_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_9_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_10_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_11_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_12_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_13_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_14_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of normalize_0_0_0_0_0_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv36_C87 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000110010000111";
    constant ap_const_lv35_79A : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000011110011010";
    constant ap_const_lv35_541 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000010101000001";
    constant ap_const_lv36_FDF : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000111111011111";
    constant ap_const_lv36_D0D : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000110100001101";
    constant ap_const_lv36_F9C : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000111110011100";
    constant ap_const_lv35_75F : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000011101011111";
    constant ap_const_lv37_23B7 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000010001110110111";
    constant ap_const_lv36_AEE : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000101011101110";
    constant ap_const_lv37_110C : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000001000100001100";
    constant ap_const_lv36_949 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000100101001001";
    constant ap_const_lv37_27D5 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000010011111010101";
    constant ap_const_lv36_B45 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000101101000101";
    constant ap_const_lv37_1E39 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000001111000111001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv36_FFC612000 : STD_LOGIC_VECTOR (35 downto 0) := "111111111100011000010010000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv36_23FA000 : STD_LOGIC_VECTOR (35 downto 0) := "000000000010001111111010000000000000";
    constant ap_const_lv36_FFF9D8000 : STD_LOGIC_VECTOR (35 downto 0) := "111111111111100111011000000000000000";
    constant ap_const_lv35_6F20000 : STD_LOGIC_VECTOR (34 downto 0) := "00000000110111100100000000000000000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv37_1FF3702000 : STD_LOGIC_VECTOR (36 downto 0) := "1111111110011011100000010000000000000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv37_1FFC596000 : STD_LOGIC_VECTOR (36 downto 0) := "1111111111100010110010110000000000000";
    constant ap_const_lv36_F1A000 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000111100011010000000000000";
    constant ap_const_lv35_7FFE94000 : STD_LOGIC_VECTOR (34 downto 0) := "11111111111111010010100000000000000";
    constant ap_const_lv36_DA36000 : STD_LOGIC_VECTOR (35 downto 0) := "000000001101101000110110000000000000";
    constant ap_const_lv36_4006000 : STD_LOGIC_VECTOR (35 downto 0) := "000000000100000000000110000000000000";
    constant ap_const_lv35_3D8A000 : STD_LOGIC_VECTOR (34 downto 0) := "00000000011110110001010000000000000";
    constant ap_const_lv37_6676000 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000110011001110110000000000000";
    constant ap_const_lv37_2C9A000 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000010110010011010000000000000";
    constant ap_const_lv36_480A000 : STD_LOGIC_VECTOR (35 downto 0) := "000000000100100000001010000000000000";
    constant ap_const_lv36_FFD99E000 : STD_LOGIC_VECTOR (35 downto 0) := "111111111101100110011110000000000000";

    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_113_reg_1677 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_113_reg_1677_pp0_iter1_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_113_reg_1677_pp0_iter2_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_113_reg_1677_pp0_iter3_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_228_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1192_4_reg_1712 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_224_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1192_5_reg_1717 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_231_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln1192_6_reg_1722 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_236_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal mul_ln1192_reg_1727 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_234_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal mul_ln1192_1_reg_1732 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_227_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1192_7_reg_1737 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_225_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln1192_8_reg_1742 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_230_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1192_9_reg_1747 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_237_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1192_10_reg_1752 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_226_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln1192_11_reg_1757 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_232_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal mul_ln1192_2_reg_1762 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_238_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal mul_ln1192_3_reg_1767 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_235_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1192_12_reg_1772 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_233_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1192_13_reg_1777 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_224_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_225_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_226_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_227_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_228_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_230_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_231_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_232_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_233_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_234_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_235_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_236_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_237_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_238_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln_fu_1218_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln1118_s_fu_1230_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1118_fu_1226_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal sext_ln1118_1_fu_1238_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln1118_fu_1242_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln1192_8_fu_1248_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln1192_fu_1294_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_107_fu_1299_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1192_1_fu_1313_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_108_fu_1318_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1192_2_fu_1332_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_109_fu_1337_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_3_fu_1351_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln1192_4_fu_1366_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln1192_5_fu_1381_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_110_fu_1386_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1192_6_fu_1400_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_111_fu_1405_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_7_fu_1419_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_112_fu_1424_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1192_9_fu_1441_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_114_fu_1446_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1192_10_fu_1460_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_115_fu_1465_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_11_fu_1479_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln1192_12_fu_1494_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln1192_13_fu_1509_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_116_fu_1514_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1192_14_fu_1528_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_117_fu_1533_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln708_fu_1309_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_1_fu_1328_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_2_fu_1347_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_3_fu_1396_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_4_fu_1415_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_5_fu_1434_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_6_fu_1438_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_7_fu_1456_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_8_fu_1475_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_9_fu_1524_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_10_fu_1543_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_224_ce : STD_LOGIC;
    signal grp_fu_225_ce : STD_LOGIC;
    signal grp_fu_226_ce : STD_LOGIC;
    signal grp_fu_227_ce : STD_LOGIC;
    signal grp_fu_228_ce : STD_LOGIC;
    signal grp_fu_230_ce : STD_LOGIC;
    signal grp_fu_231_ce : STD_LOGIC;
    signal grp_fu_232_ce : STD_LOGIC;
    signal grp_fu_233_ce : STD_LOGIC;
    signal grp_fu_234_ce : STD_LOGIC;
    signal grp_fu_235_ce : STD_LOGIC;
    signal grp_fu_236_ce : STD_LOGIC;
    signal grp_fu_237_ce : STD_LOGIC;
    signal grp_fu_238_ce : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;
    signal data_0_V_read_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal data_1_V_read_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal data_2_V_read_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal data_3_V_read_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal data_4_V_read_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal data_5_V_read_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal data_6_V_read_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal data_7_V_read_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal data_8_V_read_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal data_9_V_read_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal data_10_V_read_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal data_11_V_read_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal data_12_V_read_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal data_13_V_read_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal data_14_V_read_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_return_0_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_return_1_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_return_2_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_return_3_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_return_4_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_return_5_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_return_6_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_return_7_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_return_8_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_return_9_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_return_10_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_return_11_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_return_12_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_return_13_int_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_return_14_int_reg : STD_LOGIC_VECTOR (23 downto 0);

    component emtfptnn_mul_24s_13ns_36_4_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component emtfptnn_mul_24s_12ns_35_4_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (34 downto 0) );
    end component;


    component emtfptnn_mul_24s_15ns_37_4_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (36 downto 0) );
    end component;


    component emtfptnn_mul_24s_14ns_37_4_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (36 downto 0) );
    end component;



begin
    emtfptnn_mul_24s_13ns_36_4_0_U92 : component emtfptnn_mul_24s_13ns_36_4_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 13,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_1_V_read_int_reg,
        din1 => grp_fu_224_p1,
        ce => grp_fu_224_ce,
        dout => grp_fu_224_p2);

    emtfptnn_mul_24s_12ns_35_4_0_U93 : component emtfptnn_mul_24s_12ns_35_4_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 12,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_6_V_read_int_reg,
        din1 => grp_fu_225_p1,
        ce => grp_fu_225_ce,
        dout => grp_fu_225_p2);

    emtfptnn_mul_24s_12ns_35_4_0_U94 : component emtfptnn_mul_24s_12ns_35_4_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 12,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_10_V_read_int_reg,
        din1 => grp_fu_226_p1,
        ce => grp_fu_226_ce,
        dout => grp_fu_226_p2);

    emtfptnn_mul_24s_13ns_36_4_0_U95 : component emtfptnn_mul_24s_13ns_36_4_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 13,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_5_V_read_int_reg,
        din1 => grp_fu_227_p1,
        ce => grp_fu_227_ce,
        dout => grp_fu_227_p2);

    emtfptnn_mul_24s_13ns_36_4_0_U96 : component emtfptnn_mul_24s_13ns_36_4_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 13,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_0_V_read_int_reg,
        din1 => grp_fu_228_p1,
        ce => grp_fu_228_ce,
        dout => grp_fu_228_p2);

    emtfptnn_mul_24s_13ns_36_4_0_U97 : component emtfptnn_mul_24s_13ns_36_4_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 13,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_7_V_read_int_reg,
        din1 => grp_fu_230_p1,
        ce => grp_fu_230_ce,
        dout => grp_fu_230_p2);

    emtfptnn_mul_24s_12ns_35_4_0_U98 : component emtfptnn_mul_24s_12ns_35_4_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 12,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_2_V_read_int_reg,
        din1 => grp_fu_231_p1,
        ce => grp_fu_231_ce,
        dout => grp_fu_231_p2);

    emtfptnn_mul_24s_15ns_37_4_0_U99 : component emtfptnn_mul_24s_15ns_37_4_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 15,
        dout_WIDTH => 37)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_11_V_read_int_reg,
        din1 => grp_fu_232_p1,
        ce => grp_fu_232_ce,
        dout => grp_fu_232_p2);

    emtfptnn_mul_24s_13ns_36_4_0_U100 : component emtfptnn_mul_24s_13ns_36_4_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 13,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_14_V_read_int_reg,
        din1 => grp_fu_233_p1,
        ce => grp_fu_233_ce,
        dout => grp_fu_233_p2);

    emtfptnn_mul_24s_14ns_37_4_0_U101 : component emtfptnn_mul_24s_14ns_37_4_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 14,
        dout_WIDTH => 37)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_4_V_read_int_reg,
        din1 => grp_fu_234_p1,
        ce => grp_fu_234_ce,
        dout => grp_fu_234_p2);

    emtfptnn_mul_24s_13ns_36_4_0_U102 : component emtfptnn_mul_24s_13ns_36_4_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 13,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_13_V_read_int_reg,
        din1 => grp_fu_235_p1,
        ce => grp_fu_235_ce,
        dout => grp_fu_235_p2);

    emtfptnn_mul_24s_15ns_37_4_0_U103 : component emtfptnn_mul_24s_15ns_37_4_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 15,
        dout_WIDTH => 37)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_3_V_read_int_reg,
        din1 => grp_fu_236_p1,
        ce => grp_fu_236_ce,
        dout => grp_fu_236_p2);

    emtfptnn_mul_24s_13ns_36_4_0_U104 : component emtfptnn_mul_24s_13ns_36_4_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 13,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_9_V_read_int_reg,
        din1 => grp_fu_237_p1,
        ce => grp_fu_237_ce,
        dout => grp_fu_237_p2);

    emtfptnn_mul_24s_14ns_37_4_0_U105 : component emtfptnn_mul_24s_14ns_37_4_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 14,
        dout_WIDTH => 37)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_12_V_read_int_reg,
        din1 => grp_fu_238_p1,
        ce => grp_fu_238_ce,
        dout => grp_fu_238_p2);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_0_int_reg <= sext_ln708_fu_1309_p1;
                ap_return_10_int_reg <= sext_ln708_8_fu_1475_p1;
                ap_return_11_int_reg <= add_ln1192_11_fu_1479_p2(36 downto 13);
                ap_return_12_int_reg <= add_ln1192_12_fu_1494_p2(36 downto 13);
                ap_return_13_int_reg <= sext_ln708_9_fu_1524_p1;
                ap_return_14_int_reg <= sext_ln708_10_fu_1543_p1;
                ap_return_1_int_reg <= sext_ln708_1_fu_1328_p1;
                ap_return_2_int_reg <= sext_ln708_2_fu_1347_p1;
                ap_return_3_int_reg <= add_ln1192_3_fu_1351_p2(36 downto 13);
                ap_return_4_int_reg <= add_ln1192_4_fu_1366_p2(36 downto 13);
                ap_return_5_int_reg <= sext_ln708_3_fu_1396_p1;
                ap_return_6_int_reg <= sext_ln708_4_fu_1415_p1;
                ap_return_7_int_reg <= sext_ln708_5_fu_1434_p1;
                ap_return_8_int_reg <= sext_ln708_6_fu_1438_p1;
                ap_return_9_int_reg <= sext_ln708_7_fu_1456_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                data_0_V_read_int_reg <= data_0_V_read;
                data_10_V_read_int_reg <= data_10_V_read;
                data_11_V_read_int_reg <= data_11_V_read;
                data_12_V_read_int_reg <= data_12_V_read;
                data_13_V_read_int_reg <= data_13_V_read;
                data_14_V_read_int_reg <= data_14_V_read;
                data_1_V_read_int_reg <= data_1_V_read;
                data_2_V_read_int_reg <= data_2_V_read;
                data_3_V_read_int_reg <= data_3_V_read;
                data_4_V_read_int_reg <= data_4_V_read;
                data_5_V_read_int_reg <= data_5_V_read;
                data_6_V_read_int_reg <= data_6_V_read;
                data_7_V_read_int_reg <= data_7_V_read;
                data_8_V_read_int_reg <= data_8_V_read;
                data_9_V_read_int_reg <= data_9_V_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul_ln1192_10_reg_1752 <= grp_fu_237_p2;
                mul_ln1192_11_reg_1757 <= grp_fu_226_p2;
                mul_ln1192_12_reg_1772 <= grp_fu_235_p2;
                mul_ln1192_13_reg_1777 <= grp_fu_233_p2;
                mul_ln1192_1_reg_1732 <= grp_fu_234_p2;
                mul_ln1192_2_reg_1762 <= grp_fu_232_p2;
                mul_ln1192_3_reg_1767 <= grp_fu_238_p2;
                mul_ln1192_4_reg_1712 <= grp_fu_228_p2;
                mul_ln1192_5_reg_1717 <= grp_fu_224_p2;
                mul_ln1192_6_reg_1722 <= grp_fu_231_p2;
                mul_ln1192_7_reg_1737 <= grp_fu_227_p2;
                mul_ln1192_8_reg_1742 <= grp_fu_225_p2;
                mul_ln1192_9_reg_1747 <= grp_fu_230_p2;
                mul_ln1192_reg_1727 <= grp_fu_236_p2;
                tmp_113_reg_1677 <= add_ln1192_8_fu_1248_p2(35 downto 13);
                tmp_113_reg_1677_pp0_iter1_reg <= tmp_113_reg_1677;
                tmp_113_reg_1677_pp0_iter2_reg <= tmp_113_reg_1677_pp0_iter1_reg;
                tmp_113_reg_1677_pp0_iter3_reg <= tmp_113_reg_1677_pp0_iter2_reg;
            end if;
        end if;
    end process;
    add_ln1118_fu_1242_p2 <= std_logic_vector(signed(sext_ln1118_fu_1226_p1) + signed(sext_ln1118_1_fu_1238_p1));
    add_ln1192_10_fu_1460_p2 <= std_logic_vector(unsigned(mul_ln1192_11_reg_1757) + unsigned(ap_const_lv35_3D8A000));
    add_ln1192_11_fu_1479_p2 <= std_logic_vector(unsigned(mul_ln1192_2_reg_1762) + unsigned(ap_const_lv37_6676000));
    add_ln1192_12_fu_1494_p2 <= std_logic_vector(unsigned(mul_ln1192_3_reg_1767) + unsigned(ap_const_lv37_2C9A000));
    add_ln1192_13_fu_1509_p2 <= std_logic_vector(unsigned(mul_ln1192_12_reg_1772) + unsigned(ap_const_lv36_480A000));
    add_ln1192_14_fu_1528_p2 <= std_logic_vector(unsigned(mul_ln1192_13_reg_1777) + unsigned(ap_const_lv36_FFD99E000));
    add_ln1192_1_fu_1313_p2 <= std_logic_vector(unsigned(mul_ln1192_5_reg_1717) + unsigned(ap_const_lv36_FFF9D8000));
    add_ln1192_2_fu_1332_p2 <= std_logic_vector(unsigned(mul_ln1192_6_reg_1722) + unsigned(ap_const_lv35_6F20000));
    add_ln1192_3_fu_1351_p2 <= std_logic_vector(unsigned(mul_ln1192_reg_1727) + unsigned(ap_const_lv37_1FF3702000));
    add_ln1192_4_fu_1366_p2 <= std_logic_vector(unsigned(mul_ln1192_1_reg_1732) + unsigned(ap_const_lv37_1FFC596000));
    add_ln1192_5_fu_1381_p2 <= std_logic_vector(unsigned(mul_ln1192_7_reg_1737) + unsigned(ap_const_lv36_F1A000));
    add_ln1192_6_fu_1400_p2 <= std_logic_vector(unsigned(mul_ln1192_8_reg_1742) + unsigned(ap_const_lv35_7FFE94000));
    add_ln1192_7_fu_1419_p2 <= std_logic_vector(unsigned(mul_ln1192_9_reg_1747) + unsigned(ap_const_lv36_DA36000));
    add_ln1192_8_fu_1248_p2 <= std_logic_vector(unsigned(add_ln1118_fu_1242_p2) + unsigned(ap_const_lv36_FFC612000));
    add_ln1192_9_fu_1441_p2 <= std_logic_vector(unsigned(mul_ln1192_10_reg_1752) + unsigned(ap_const_lv36_4006000));
    add_ln1192_fu_1294_p2 <= std_logic_vector(unsigned(mul_ln1192_4_reg_1712) + unsigned(ap_const_lv36_23FA000));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_0_assign_proc : process(sext_ln708_fu_1309_p1, ap_ce_reg, ap_return_0_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_0 <= ap_return_0_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_0 <= sext_ln708_fu_1309_p1;
        end if; 
    end process;


    ap_return_1_assign_proc : process(sext_ln708_1_fu_1328_p1, ap_ce_reg, ap_return_1_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_1 <= ap_return_1_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_1 <= sext_ln708_1_fu_1328_p1;
        end if; 
    end process;


    ap_return_10_assign_proc : process(sext_ln708_8_fu_1475_p1, ap_ce_reg, ap_return_10_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_10 <= ap_return_10_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_10 <= sext_ln708_8_fu_1475_p1;
        end if; 
    end process;


    ap_return_11_assign_proc : process(add_ln1192_11_fu_1479_p2, ap_ce_reg, ap_return_11_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_11 <= ap_return_11_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_11 <= add_ln1192_11_fu_1479_p2(36 downto 13);
        end if; 
    end process;


    ap_return_12_assign_proc : process(add_ln1192_12_fu_1494_p2, ap_ce_reg, ap_return_12_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_12 <= ap_return_12_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_12 <= add_ln1192_12_fu_1494_p2(36 downto 13);
        end if; 
    end process;


    ap_return_13_assign_proc : process(sext_ln708_9_fu_1524_p1, ap_ce_reg, ap_return_13_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_13 <= ap_return_13_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_13 <= sext_ln708_9_fu_1524_p1;
        end if; 
    end process;


    ap_return_14_assign_proc : process(sext_ln708_10_fu_1543_p1, ap_ce_reg, ap_return_14_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_14 <= ap_return_14_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_14 <= sext_ln708_10_fu_1543_p1;
        end if; 
    end process;


    ap_return_2_assign_proc : process(sext_ln708_2_fu_1347_p1, ap_ce_reg, ap_return_2_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_2 <= ap_return_2_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_2 <= sext_ln708_2_fu_1347_p1;
        end if; 
    end process;


    ap_return_3_assign_proc : process(add_ln1192_3_fu_1351_p2, ap_ce_reg, ap_return_3_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_3 <= ap_return_3_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_3 <= add_ln1192_3_fu_1351_p2(36 downto 13);
        end if; 
    end process;


    ap_return_4_assign_proc : process(add_ln1192_4_fu_1366_p2, ap_ce_reg, ap_return_4_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_4 <= ap_return_4_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_4 <= add_ln1192_4_fu_1366_p2(36 downto 13);
        end if; 
    end process;


    ap_return_5_assign_proc : process(sext_ln708_3_fu_1396_p1, ap_ce_reg, ap_return_5_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_5 <= ap_return_5_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_5 <= sext_ln708_3_fu_1396_p1;
        end if; 
    end process;


    ap_return_6_assign_proc : process(sext_ln708_4_fu_1415_p1, ap_ce_reg, ap_return_6_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_6 <= ap_return_6_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_6 <= sext_ln708_4_fu_1415_p1;
        end if; 
    end process;


    ap_return_7_assign_proc : process(sext_ln708_5_fu_1434_p1, ap_ce_reg, ap_return_7_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_7 <= ap_return_7_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_7 <= sext_ln708_5_fu_1434_p1;
        end if; 
    end process;


    ap_return_8_assign_proc : process(sext_ln708_6_fu_1438_p1, ap_ce_reg, ap_return_8_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_8 <= ap_return_8_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_8 <= sext_ln708_6_fu_1438_p1;
        end if; 
    end process;


    ap_return_9_assign_proc : process(sext_ln708_7_fu_1456_p1, ap_ce_reg, ap_return_9_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_9 <= ap_return_9_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_9 <= sext_ln708_7_fu_1456_p1;
        end if; 
    end process;


    grp_fu_224_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_224_ce <= ap_const_logic_1;
        else 
            grp_fu_224_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_224_p1 <= ap_const_lv36_C87(13 - 1 downto 0);

    grp_fu_225_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_225_ce <= ap_const_logic_1;
        else 
            grp_fu_225_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_225_p1 <= ap_const_lv35_79A(12 - 1 downto 0);

    grp_fu_226_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_226_ce <= ap_const_logic_1;
        else 
            grp_fu_226_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_226_p1 <= ap_const_lv35_541(12 - 1 downto 0);

    grp_fu_227_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_227_ce <= ap_const_logic_1;
        else 
            grp_fu_227_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_227_p1 <= ap_const_lv36_FDF(13 - 1 downto 0);

    grp_fu_228_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_228_ce <= ap_const_logic_1;
        else 
            grp_fu_228_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_228_p1 <= ap_const_lv36_D0D(13 - 1 downto 0);

    grp_fu_230_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_230_ce <= ap_const_logic_1;
        else 
            grp_fu_230_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_230_p1 <= ap_const_lv36_F9C(13 - 1 downto 0);

    grp_fu_231_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_231_ce <= ap_const_logic_1;
        else 
            grp_fu_231_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_231_p1 <= ap_const_lv35_75F(12 - 1 downto 0);

    grp_fu_232_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_232_ce <= ap_const_logic_1;
        else 
            grp_fu_232_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_232_p1 <= ap_const_lv37_23B7(15 - 1 downto 0);

    grp_fu_233_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_233_ce <= ap_const_logic_1;
        else 
            grp_fu_233_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_233_p1 <= ap_const_lv36_AEE(13 - 1 downto 0);

    grp_fu_234_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_234_ce <= ap_const_logic_1;
        else 
            grp_fu_234_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_234_p1 <= ap_const_lv37_110C(14 - 1 downto 0);

    grp_fu_235_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_235_ce <= ap_const_logic_1;
        else 
            grp_fu_235_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_235_p1 <= ap_const_lv36_949(13 - 1 downto 0);

    grp_fu_236_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_236_ce <= ap_const_logic_1;
        else 
            grp_fu_236_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_236_p1 <= ap_const_lv37_27D5(15 - 1 downto 0);

    grp_fu_237_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_237_ce <= ap_const_logic_1;
        else 
            grp_fu_237_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_237_p1 <= ap_const_lv36_B45(13 - 1 downto 0);

    grp_fu_238_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_238_ce <= ap_const_logic_1;
        else 
            grp_fu_238_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_238_p1 <= ap_const_lv37_1E39(14 - 1 downto 0);
        sext_ln1118_1_fu_1238_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_1230_p3),36));

        sext_ln1118_fu_1226_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_1218_p3),36));

        sext_ln708_10_fu_1543_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_117_fu_1533_p4),24));

        sext_ln708_1_fu_1328_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_108_fu_1318_p4),24));

        sext_ln708_2_fu_1347_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_109_fu_1337_p4),24));

        sext_ln708_3_fu_1396_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_110_fu_1386_p4),24));

        sext_ln708_4_fu_1415_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_111_fu_1405_p4),24));

        sext_ln708_5_fu_1434_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_112_fu_1424_p4),24));

        sext_ln708_6_fu_1438_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_113_reg_1677_pp0_iter3_reg),24));

        sext_ln708_7_fu_1456_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_114_fu_1446_p4),24));

        sext_ln708_8_fu_1475_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_115_fu_1465_p4),24));

        sext_ln708_9_fu_1524_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_116_fu_1514_p4),24));

        sext_ln708_fu_1309_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_107_fu_1299_p4),24));

    shl_ln1118_s_fu_1230_p3 <= (data_8_V_read_int_reg & ap_const_lv7_0);
    shl_ln_fu_1218_p3 <= (data_8_V_read_int_reg & ap_const_lv11_0);
    tmp_107_fu_1299_p4 <= add_ln1192_fu_1294_p2(35 downto 13);
    tmp_108_fu_1318_p4 <= add_ln1192_1_fu_1313_p2(35 downto 13);
    tmp_109_fu_1337_p4 <= add_ln1192_2_fu_1332_p2(34 downto 13);
    tmp_110_fu_1386_p4 <= add_ln1192_5_fu_1381_p2(35 downto 13);
    tmp_111_fu_1405_p4 <= add_ln1192_6_fu_1400_p2(34 downto 13);
    tmp_112_fu_1424_p4 <= add_ln1192_7_fu_1419_p2(35 downto 13);
    tmp_114_fu_1446_p4 <= add_ln1192_9_fu_1441_p2(35 downto 13);
    tmp_115_fu_1465_p4 <= add_ln1192_10_fu_1460_p2(34 downto 13);
    tmp_116_fu_1514_p4 <= add_ln1192_13_fu_1509_p2(35 downto 13);
    tmp_117_fu_1533_p4 <= add_ln1192_14_fu_1528_p2(35 downto 13);
end behav;
