-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity normalize_0_0_0_0_0_2 is
port (
    ap_ready : OUT STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_9_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_10_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_11_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_12_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_13_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    data_14_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (23 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (23 downto 0) );
end;


architecture behav of normalize_0_0_0_0_0_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv36_C87 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000110010000111";
    constant ap_const_lv35_79A : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000011110011010";
    constant ap_const_lv35_541 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000010101000001";
    constant ap_const_lv36_FDF : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000111111011111";
    constant ap_const_lv36_D0D : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000110100001101";
    constant ap_const_lv36_F9C : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000111110011100";
    constant ap_const_lv35_75F : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000011101011111";
    constant ap_const_lv37_23B7 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000010001110110111";
    constant ap_const_lv36_AEE : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000101011101110";
    constant ap_const_lv37_110C : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000001000100001100";
    constant ap_const_lv36_949 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000100101001001";
    constant ap_const_lv37_27D5 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000010011111010101";
    constant ap_const_lv36_B45 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000101101000101";
    constant ap_const_lv37_1E39 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000001111000111001";
    constant ap_const_lv36_23FA000 : STD_LOGIC_VECTOR (35 downto 0) := "000000000010001111111010000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv36_FFF9D8000 : STD_LOGIC_VECTOR (35 downto 0) := "111111111111100111011000000000000000";
    constant ap_const_lv35_6F20000 : STD_LOGIC_VECTOR (34 downto 0) := "00000000110111100100000000000000000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv37_1FF3702000 : STD_LOGIC_VECTOR (36 downto 0) := "1111111110011011100000010000000000000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv37_1FFC596000 : STD_LOGIC_VECTOR (36 downto 0) := "1111111111100010110010110000000000000";
    constant ap_const_lv36_F1A000 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000111100011010000000000000";
    constant ap_const_lv35_7FFE94000 : STD_LOGIC_VECTOR (34 downto 0) := "11111111111111010010100000000000000";
    constant ap_const_lv36_DA36000 : STD_LOGIC_VECTOR (35 downto 0) := "000000001101101000110110000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv36_FFC612000 : STD_LOGIC_VECTOR (35 downto 0) := "111111111100011000010010000000000000";
    constant ap_const_lv36_4006000 : STD_LOGIC_VECTOR (35 downto 0) := "000000000100000000000110000000000000";
    constant ap_const_lv35_3D8A000 : STD_LOGIC_VECTOR (34 downto 0) := "00000000011110110001010000000000000";
    constant ap_const_lv37_6676000 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000110011001110110000000000000";
    constant ap_const_lv37_2C9A000 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000010110010011010000000000000";
    constant ap_const_lv36_480A000 : STD_LOGIC_VECTOR (35 downto 0) := "000000000100100000001010000000000000";
    constant ap_const_lv36_FFD99E000 : STD_LOGIC_VECTOR (35 downto 0) := "111111111101100110011110000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal mul_ln1192_5_fu_224_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_8_fu_225_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_11_fu_226_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_7_fu_227_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_4_fu_228_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_9_fu_230_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_6_fu_231_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_2_fu_232_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_13_fu_233_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_1_fu_234_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_12_fu_235_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_fu_236_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_10_fu_237_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_3_fu_238_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_4_fu_228_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln1192_fu_1183_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_107_fu_1189_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln1192_5_fu_224_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln1192_1_fu_1208_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_108_fu_1214_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln1192_6_fu_231_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1192_2_fu_1233_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_109_fu_1239_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_fu_236_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln1192_3_fu_1258_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal mul_ln1192_1_fu_234_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln1192_4_fu_1279_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal mul_ln1192_7_fu_227_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln1192_5_fu_1300_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_110_fu_1306_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln1192_8_fu_225_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1192_6_fu_1325_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_111_fu_1331_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_9_fu_230_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln1192_7_fu_1350_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_112_fu_1356_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln_fu_1370_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln1118_s_fu_1382_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1118_fu_1378_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal sext_ln1118_1_fu_1390_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln1118_fu_1394_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln1192_8_fu_1400_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_113_fu_1406_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln1192_10_fu_237_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln1192_9_fu_1425_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_114_fu_1431_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln1192_11_fu_226_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1192_10_fu_1450_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_115_fu_1456_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_2_fu_232_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln1192_11_fu_1475_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal mul_ln1192_3_fu_238_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln1192_12_fu_1496_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal mul_ln1192_12_fu_235_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln1192_13_fu_1517_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_116_fu_1523_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln1192_13_fu_233_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln1192_14_fu_1542_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_117_fu_1548_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln708_fu_1199_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_1_fu_1224_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_2_fu_1249_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_3_fu_1316_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_4_fu_1341_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_5_fu_1366_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_6_fu_1416_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_7_fu_1441_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_8_fu_1466_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_9_fu_1533_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_10_fu_1558_p1 : STD_LOGIC_VECTOR (23 downto 0);


begin



    add_ln1118_fu_1394_p2 <= std_logic_vector(signed(sext_ln1118_fu_1378_p1) + signed(sext_ln1118_1_fu_1390_p1));
    add_ln1192_10_fu_1450_p2 <= std_logic_vector(unsigned(mul_ln1192_11_fu_226_p2) + unsigned(ap_const_lv35_3D8A000));
    add_ln1192_11_fu_1475_p2 <= std_logic_vector(unsigned(mul_ln1192_2_fu_232_p2) + unsigned(ap_const_lv37_6676000));
    add_ln1192_12_fu_1496_p2 <= std_logic_vector(unsigned(mul_ln1192_3_fu_238_p2) + unsigned(ap_const_lv37_2C9A000));
    add_ln1192_13_fu_1517_p2 <= std_logic_vector(unsigned(mul_ln1192_12_fu_235_p2) + unsigned(ap_const_lv36_480A000));
    add_ln1192_14_fu_1542_p2 <= std_logic_vector(unsigned(mul_ln1192_13_fu_233_p2) + unsigned(ap_const_lv36_FFD99E000));
    add_ln1192_1_fu_1208_p2 <= std_logic_vector(unsigned(mul_ln1192_5_fu_224_p2) + unsigned(ap_const_lv36_FFF9D8000));
    add_ln1192_2_fu_1233_p2 <= std_logic_vector(unsigned(mul_ln1192_6_fu_231_p2) + unsigned(ap_const_lv35_6F20000));
    add_ln1192_3_fu_1258_p2 <= std_logic_vector(unsigned(mul_ln1192_fu_236_p2) + unsigned(ap_const_lv37_1FF3702000));
    add_ln1192_4_fu_1279_p2 <= std_logic_vector(unsigned(mul_ln1192_1_fu_234_p2) + unsigned(ap_const_lv37_1FFC596000));
    add_ln1192_5_fu_1300_p2 <= std_logic_vector(unsigned(mul_ln1192_7_fu_227_p2) + unsigned(ap_const_lv36_F1A000));
    add_ln1192_6_fu_1325_p2 <= std_logic_vector(unsigned(mul_ln1192_8_fu_225_p2) + unsigned(ap_const_lv35_7FFE94000));
    add_ln1192_7_fu_1350_p2 <= std_logic_vector(unsigned(mul_ln1192_9_fu_230_p2) + unsigned(ap_const_lv36_DA36000));
    add_ln1192_8_fu_1400_p2 <= std_logic_vector(unsigned(add_ln1118_fu_1394_p2) + unsigned(ap_const_lv36_FFC612000));
    add_ln1192_9_fu_1425_p2 <= std_logic_vector(unsigned(mul_ln1192_10_fu_237_p2) + unsigned(ap_const_lv36_4006000));
    add_ln1192_fu_1183_p2 <= std_logic_vector(unsigned(mul_ln1192_4_fu_228_p2) + unsigned(ap_const_lv36_23FA000));
    ap_ready <= ap_const_logic_1;
    ap_return_0 <= sext_ln708_fu_1199_p1;
    ap_return_1 <= sext_ln708_1_fu_1224_p1;
    ap_return_10 <= sext_ln708_8_fu_1466_p1;
    ap_return_11 <= add_ln1192_11_fu_1475_p2(36 downto 13);
    ap_return_12 <= add_ln1192_12_fu_1496_p2(36 downto 13);
    ap_return_13 <= sext_ln708_9_fu_1533_p1;
    ap_return_14 <= sext_ln708_10_fu_1558_p1;
    ap_return_2 <= sext_ln708_2_fu_1249_p1;
    ap_return_3 <= add_ln1192_3_fu_1258_p2(36 downto 13);
    ap_return_4 <= add_ln1192_4_fu_1279_p2(36 downto 13);
    ap_return_5 <= sext_ln708_3_fu_1316_p1;
    ap_return_6 <= sext_ln708_4_fu_1341_p1;
    ap_return_7 <= sext_ln708_5_fu_1366_p1;
    ap_return_8 <= sext_ln708_6_fu_1416_p1;
    ap_return_9 <= sext_ln708_7_fu_1441_p1;
    mul_ln1192_10_fu_237_p0 <= data_9_V_read;
    mul_ln1192_10_fu_237_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_10_fu_237_p0) * signed('0' &ap_const_lv36_B45))), 36));
    mul_ln1192_11_fu_226_p0 <= data_10_V_read;
    mul_ln1192_11_fu_226_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_11_fu_226_p0) * signed('0' &ap_const_lv35_541))), 35));
    mul_ln1192_12_fu_235_p0 <= data_13_V_read;
    mul_ln1192_12_fu_235_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_12_fu_235_p0) * signed('0' &ap_const_lv36_949))), 36));
    mul_ln1192_13_fu_233_p0 <= data_14_V_read;
    mul_ln1192_13_fu_233_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_13_fu_233_p0) * signed('0' &ap_const_lv36_AEE))), 36));
    mul_ln1192_1_fu_234_p0 <= data_4_V_read;
    mul_ln1192_1_fu_234_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_1_fu_234_p0) * signed('0' &ap_const_lv37_110C))), 37));
    mul_ln1192_2_fu_232_p0 <= data_11_V_read;
    mul_ln1192_2_fu_232_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_2_fu_232_p0) * signed('0' &ap_const_lv37_23B7))), 37));
    mul_ln1192_3_fu_238_p0 <= data_12_V_read;
    mul_ln1192_3_fu_238_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_3_fu_238_p0) * signed('0' &ap_const_lv37_1E39))), 37));
    mul_ln1192_4_fu_228_p0 <= data_0_V_read;
    mul_ln1192_4_fu_228_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_4_fu_228_p0) * signed('0' &ap_const_lv36_D0D))), 36));
    mul_ln1192_5_fu_224_p0 <= data_1_V_read;
    mul_ln1192_5_fu_224_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_5_fu_224_p0) * signed('0' &ap_const_lv36_C87))), 36));
    mul_ln1192_6_fu_231_p0 <= data_2_V_read;
    mul_ln1192_6_fu_231_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_6_fu_231_p0) * signed('0' &ap_const_lv35_75F))), 35));
    mul_ln1192_7_fu_227_p0 <= data_5_V_read;
    mul_ln1192_7_fu_227_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_7_fu_227_p0) * signed('0' &ap_const_lv36_FDF))), 36));
    mul_ln1192_8_fu_225_p0 <= data_6_V_read;
    mul_ln1192_8_fu_225_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_8_fu_225_p0) * signed('0' &ap_const_lv35_79A))), 35));
    mul_ln1192_9_fu_230_p0 <= data_7_V_read;
    mul_ln1192_9_fu_230_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_9_fu_230_p0) * signed('0' &ap_const_lv36_F9C))), 36));
    mul_ln1192_fu_236_p0 <= data_3_V_read;
    mul_ln1192_fu_236_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_fu_236_p0) * signed('0' &ap_const_lv37_27D5))), 37));
        sext_ln1118_1_fu_1390_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_1382_p3),36));

        sext_ln1118_fu_1378_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_1370_p3),36));

        sext_ln708_10_fu_1558_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_117_fu_1548_p4),24));

        sext_ln708_1_fu_1224_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_108_fu_1214_p4),24));

        sext_ln708_2_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_109_fu_1239_p4),24));

        sext_ln708_3_fu_1316_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_110_fu_1306_p4),24));

        sext_ln708_4_fu_1341_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_111_fu_1331_p4),24));

        sext_ln708_5_fu_1366_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_112_fu_1356_p4),24));

        sext_ln708_6_fu_1416_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_113_fu_1406_p4),24));

        sext_ln708_7_fu_1441_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_114_fu_1431_p4),24));

        sext_ln708_8_fu_1466_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_115_fu_1456_p4),24));

        sext_ln708_9_fu_1533_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_116_fu_1523_p4),24));

        sext_ln708_fu_1199_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_107_fu_1189_p4),24));

    shl_ln1118_s_fu_1382_p3 <= (data_8_V_read & ap_const_lv7_0);
    shl_ln_fu_1370_p3 <= (data_8_V_read & ap_const_lv11_0);
    tmp_107_fu_1189_p4 <= add_ln1192_fu_1183_p2(35 downto 13);
    tmp_108_fu_1214_p4 <= add_ln1192_1_fu_1208_p2(35 downto 13);
    tmp_109_fu_1239_p4 <= add_ln1192_2_fu_1233_p2(34 downto 13);
    tmp_110_fu_1306_p4 <= add_ln1192_5_fu_1300_p2(35 downto 13);
    tmp_111_fu_1331_p4 <= add_ln1192_6_fu_1325_p2(34 downto 13);
    tmp_112_fu_1356_p4 <= add_ln1192_7_fu_1350_p2(35 downto 13);
    tmp_113_fu_1406_p4 <= add_ln1192_8_fu_1400_p2(35 downto 13);
    tmp_114_fu_1431_p4 <= add_ln1192_9_fu_1425_p2(35 downto 13);
    tmp_115_fu_1456_p4 <= add_ln1192_10_fu_1450_p2(34 downto 13);
    tmp_116_fu_1523_p4 <= add_ln1192_13_fu_1517_p2(35 downto 13);
    tmp_117_fu_1548_p4 <= add_ln1192_14_fu_1542_p2(35 downto 13);
end behav;
