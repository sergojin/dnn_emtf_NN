-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_layer_0_0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_9_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_10_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_11_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_12_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_13_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_14_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_15_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (17 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of compute_layer_0_0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv30_3FFFEFB9 : STD_LOGIC_VECTOR (29 downto 0) := "111111111111111110111110111001";
    constant ap_const_lv30_1178 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000001000101111000";
    constant ap_const_lv30_3FFFF866 : STD_LOGIC_VECTOR (29 downto 0) := "111111111111111111100001100110";
    constant ap_const_lv30_3FFFE518 : STD_LOGIC_VECTOR (29 downto 0) := "111111111111111110010100011000";
    constant ap_const_lv30_2F72 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000010111101110010";
    constant ap_const_lv30_1494 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000001010010010100";
    constant ap_const_lv30_3FFFEC92 : STD_LOGIC_VECTOR (29 downto 0) := "111111111111111110110010010010";
    constant ap_const_lv30_3FFFF8AC : STD_LOGIC_VECTOR (29 downto 0) := "111111111111111111100010101100";
    constant ap_const_lv28_FFFFEC1 : STD_LOGIC_VECTOR (27 downto 0) := "1111111111111111111011000001";
    constant ap_const_lv30_1812 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000001100000010010";
    constant ap_const_lv29_1FFFFCFE : STD_LOGIC_VECTOR (28 downto 0) := "11111111111111111110011111110";
    constant ap_const_lv30_3FFFD2AA : STD_LOGIC_VECTOR (29 downto 0) := "111111111111111101001010101010";
    constant ap_const_lv29_1FFFFD55 : STD_LOGIC_VECTOR (28 downto 0) := "11111111111111111110101010101";
    constant ap_const_lv30_3FFFCA9C : STD_LOGIC_VECTOR (29 downto 0) := "111111111111111100101010011100";
    constant ap_const_lv30_3FFFB3F8 : STD_LOGIC_VECTOR (29 downto 0) := "111111111111111011001111111000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv18_3EC0F : STD_LOGIC_VECTOR (17 downto 0) := "111110110000001111";

    signal data_5_V_read_7_reg_1638 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal data_5_V_read_7_reg_1638_pp0_iter1_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_30_reg_1719 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_30_1_reg_1724 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_164_reg_1729 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_3_reg_1734 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_30_4_reg_1739 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_30_6_reg_1744 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_30_7_reg_1749 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_30_8_reg_1754 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_30_9_reg_1759 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_167_reg_1764 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_s_reg_1769 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_30_2_reg_1774 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_30_10_reg_1779 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_170_reg_1784 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_11_reg_1789 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp3_fu_1569_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp3_reg_1794 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp7_fu_1575_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp7_reg_1799 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp8_fu_1580_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp8_reg_1804 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp10_fu_1593_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp10_reg_1809 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp10_reg_1809_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp13_fu_1614_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp13_reg_1814 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp13_reg_1814_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp2_fu_1624_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp2_reg_1819 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_210_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_211_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_213_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_214_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_215_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_216_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_217_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_218_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_219_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_220_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_221_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_222_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_223_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_224_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_225_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_222_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_216_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_219_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_213_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_215_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_217_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_214_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_220_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_211_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_221_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_218_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_210_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_225_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_223_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_224_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_shl1_fu_1527_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl_fu_1520_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_shl1_cast_fu_1534_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_s_58_fu_1538_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_165_fu_1517_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp4_fu_1560_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp5_fu_1564_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_30_5_fu_1544_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_168_fu_1554_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp11_fu_1584_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp12_fu_1588_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_171_fu_1557_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp16_fu_1603_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp14_fu_1599_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp15_fu_1608_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp6_fu_1620_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp9_fu_1629_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_210_ce : STD_LOGIC;
    signal grp_fu_211_ce : STD_LOGIC;
    signal grp_fu_213_ce : STD_LOGIC;
    signal grp_fu_214_ce : STD_LOGIC;
    signal grp_fu_215_ce : STD_LOGIC;
    signal grp_fu_216_ce : STD_LOGIC;
    signal grp_fu_217_ce : STD_LOGIC;
    signal grp_fu_218_ce : STD_LOGIC;
    signal grp_fu_219_ce : STD_LOGIC;
    signal grp_fu_220_ce : STD_LOGIC;
    signal grp_fu_221_ce : STD_LOGIC;
    signal grp_fu_222_ce : STD_LOGIC;
    signal grp_fu_223_ce : STD_LOGIC;
    signal grp_fu_224_ce : STD_LOGIC;
    signal grp_fu_225_ce : STD_LOGIC;
    signal res_V_write_assign_fu_1633_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal data_0_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_1_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_2_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_3_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_4_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_5_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_6_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_7_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_8_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_9_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_10_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_11_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_12_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_13_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_14_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_15_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (17 downto 0);

    component myproject_mul_18sFfa IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_mul_18sCeG IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_mul_18sKfY IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_mul_18sHfu IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_mul_18sGfk IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_mul_18sRg6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component myproject_mul_18sMgi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_mul_18sUhA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;



begin
    myproject_mul_18sFfa_U3261 : component myproject_mul_18sFfa
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 14,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_12_V_read_int_reg,
        din1 => grp_fu_210_p1,
        ce => grp_fu_210_ce,
        dout => grp_fu_210_p2);

    myproject_mul_18sCeG_U3262 : component myproject_mul_18sCeG
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 14,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_9_V_read_int_reg,
        din1 => grp_fu_211_p1,
        ce => grp_fu_211_ce,
        dout => grp_fu_211_p2);

    myproject_mul_18sKfY_U3263 : component myproject_mul_18sKfY
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 12,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_3_V_read_int_reg,
        din1 => grp_fu_213_p1,
        ce => grp_fu_213_ce,
        dout => grp_fu_213_p2);

    myproject_mul_18sFfa_U3264 : component myproject_mul_18sFfa
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 14,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_7_V_read_int_reg,
        din1 => grp_fu_214_p1,
        ce => grp_fu_214_ce,
        dout => grp_fu_214_p2);

    myproject_mul_18sHfu_U3265 : component myproject_mul_18sHfu
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_4_V_read_int_reg,
        din1 => grp_fu_215_p1,
        ce => grp_fu_215_ce,
        dout => grp_fu_215_p2);

    myproject_mul_18sCeG_U3266 : component myproject_mul_18sCeG
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 14,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_1_V_read_int_reg,
        din1 => grp_fu_216_p1,
        ce => grp_fu_216_ce,
        dout => grp_fu_216_p2);

    myproject_mul_18sFfa_U3267 : component myproject_mul_18sFfa
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 14,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_6_V_read_int_reg,
        din1 => grp_fu_217_p1,
        ce => grp_fu_217_ce,
        dout => grp_fu_217_p2);

    myproject_mul_18sKfY_U3268 : component myproject_mul_18sKfY
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 12,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_11_V_read_int_reg,
        din1 => grp_fu_218_p1,
        ce => grp_fu_218_ce,
        dout => grp_fu_218_p2);

    myproject_mul_18sGfk_U3269 : component myproject_mul_18sGfk
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 10,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_2_V_read_int_reg,
        din1 => grp_fu_219_p1,
        ce => grp_fu_219_ce,
        dout => grp_fu_219_p2);

    myproject_mul_18sCeG_U3270 : component myproject_mul_18sCeG
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 14,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_8_V_read_int_reg,
        din1 => grp_fu_220_p1,
        ce => grp_fu_220_ce,
        dout => grp_fu_220_p2);

    myproject_mul_18sRg6_U3271 : component myproject_mul_18sRg6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 11,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_10_V_read_int_reg,
        din1 => grp_fu_221_p1,
        ce => grp_fu_221_ce,
        dout => grp_fu_221_p2);

    myproject_mul_18sMgi_U3272 : component myproject_mul_18sMgi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_0_V_read_int_reg,
        din1 => grp_fu_222_p1,
        ce => grp_fu_222_ce,
        dout => grp_fu_222_p2);

    myproject_mul_18sRg6_U3273 : component myproject_mul_18sRg6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 11,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_14_V_read_int_reg,
        din1 => grp_fu_223_p1,
        ce => grp_fu_223_ce,
        dout => grp_fu_223_p2);

    myproject_mul_18sMgi_U3274 : component myproject_mul_18sMgi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_15_V_read_int_reg,
        din1 => grp_fu_224_p1,
        ce => grp_fu_224_ce,
        dout => grp_fu_224_p2);

    myproject_mul_18sUhA_U3275 : component myproject_mul_18sUhA
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_13_V_read_int_reg,
        din1 => grp_fu_225_p1,
        ce => grp_fu_225_ce,
        dout => grp_fu_225_p2);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= res_V_write_assign_fu_1633_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                data_0_V_read_int_reg <= data_0_V_read;
                data_10_V_read_int_reg <= data_10_V_read;
                data_11_V_read_int_reg <= data_11_V_read;
                data_12_V_read_int_reg <= data_12_V_read;
                data_13_V_read_int_reg <= data_13_V_read;
                data_14_V_read_int_reg <= data_14_V_read;
                data_15_V_read_int_reg <= data_15_V_read;
                data_1_V_read_int_reg <= data_1_V_read;
                data_2_V_read_int_reg <= data_2_V_read;
                data_3_V_read_int_reg <= data_3_V_read;
                data_4_V_read_int_reg <= data_4_V_read;
                data_5_V_read_int_reg <= data_5_V_read;
                data_6_V_read_int_reg <= data_6_V_read;
                data_7_V_read_int_reg <= data_7_V_read;
                data_8_V_read_int_reg <= data_8_V_read;
                data_9_V_read_int_reg <= data_9_V_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                data_5_V_read_7_reg_1638 <= data_5_V_read_int_reg;
                data_5_V_read_7_reg_1638_pp0_iter1_reg <= data_5_V_read_7_reg_1638;
                tmp10_reg_1809 <= tmp10_fu_1593_p2;
                tmp10_reg_1809_pp0_iter3_reg <= tmp10_reg_1809;
                tmp13_reg_1814 <= tmp13_fu_1614_p2;
                tmp13_reg_1814_pp0_iter3_reg <= tmp13_reg_1814;
                tmp2_reg_1819 <= tmp2_fu_1624_p2;
                tmp3_reg_1794 <= tmp3_fu_1569_p2;
                tmp7_reg_1799 <= tmp7_fu_1575_p2;
                tmp8_reg_1804 <= tmp8_fu_1580_p2;
                tmp_164_reg_1729 <= grp_fu_219_p2(27 downto 12);
                tmp_167_reg_1764 <= grp_fu_221_p2(28 downto 12);
                tmp_170_reg_1784 <= grp_fu_223_p2(28 downto 12);
                tmp_30_10_reg_1779 <= grp_fu_225_p2(29 downto 12);
                tmp_30_11_reg_1789 <= grp_fu_224_p2(29 downto 12);
                tmp_30_1_reg_1724 <= grp_fu_216_p2(29 downto 12);
                tmp_30_2_reg_1774 <= grp_fu_210_p2(29 downto 12);
                tmp_30_3_reg_1734 <= grp_fu_213_p2(29 downto 12);
                tmp_30_4_reg_1739 <= grp_fu_215_p2(29 downto 12);
                tmp_30_6_reg_1744 <= grp_fu_217_p2(29 downto 12);
                tmp_30_7_reg_1749 <= grp_fu_214_p2(29 downto 12);
                tmp_30_8_reg_1754 <= grp_fu_220_p2(29 downto 12);
                tmp_30_9_reg_1759 <= grp_fu_211_p2(29 downto 12);
                tmp_30_reg_1719 <= grp_fu_222_p2(29 downto 12);
                tmp_30_s_reg_1769 <= grp_fu_218_p2(29 downto 12);
            end if;
        end if;
    end process;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(res_V_write_assign_fu_1633_p2, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= res_V_write_assign_fu_1633_p2;
        end if; 
    end process;


    grp_fu_210_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_210_ce <= ap_const_logic_1;
        else 
            grp_fu_210_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_210_p1 <= ap_const_lv30_3FFFEFB9(14 - 1 downto 0);

    grp_fu_211_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_211_ce <= ap_const_logic_1;
        else 
            grp_fu_211_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_211_p1 <= ap_const_lv30_1178(14 - 1 downto 0);

    grp_fu_213_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_213_ce <= ap_const_logic_1;
        else 
            grp_fu_213_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_213_p1 <= ap_const_lv30_3FFFF866(12 - 1 downto 0);

    grp_fu_214_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_214_ce <= ap_const_logic_1;
        else 
            grp_fu_214_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_214_p1 <= ap_const_lv30_3FFFE518(14 - 1 downto 0);

    grp_fu_215_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_215_ce <= ap_const_logic_1;
        else 
            grp_fu_215_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_215_p1 <= ap_const_lv30_2F72(15 - 1 downto 0);

    grp_fu_216_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_216_ce <= ap_const_logic_1;
        else 
            grp_fu_216_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_216_p1 <= ap_const_lv30_1494(14 - 1 downto 0);

    grp_fu_217_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_217_ce <= ap_const_logic_1;
        else 
            grp_fu_217_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_217_p1 <= ap_const_lv30_3FFFEC92(14 - 1 downto 0);

    grp_fu_218_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_218_ce <= ap_const_logic_1;
        else 
            grp_fu_218_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_218_p1 <= ap_const_lv30_3FFFF8AC(12 - 1 downto 0);

    grp_fu_219_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_219_ce <= ap_const_logic_1;
        else 
            grp_fu_219_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_219_p1 <= ap_const_lv28_FFFFEC1(10 - 1 downto 0);

    grp_fu_220_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_220_ce <= ap_const_logic_1;
        else 
            grp_fu_220_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_220_p1 <= ap_const_lv30_1812(14 - 1 downto 0);

    grp_fu_221_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_221_ce <= ap_const_logic_1;
        else 
            grp_fu_221_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_221_p1 <= ap_const_lv29_1FFFFCFE(11 - 1 downto 0);

    grp_fu_222_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_222_ce <= ap_const_logic_1;
        else 
            grp_fu_222_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_222_p1 <= ap_const_lv30_3FFFD2AA(15 - 1 downto 0);

    grp_fu_223_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_223_ce <= ap_const_logic_1;
        else 
            grp_fu_223_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_223_p1 <= ap_const_lv29_1FFFFD55(11 - 1 downto 0);

    grp_fu_224_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_224_ce <= ap_const_logic_1;
        else 
            grp_fu_224_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_224_p1 <= ap_const_lv30_3FFFCA9C(15 - 1 downto 0);

    grp_fu_225_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_225_ce <= ap_const_logic_1;
        else 
            grp_fu_225_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_225_p1 <= ap_const_lv30_3FFFB3F8(16 - 1 downto 0);
    p_Val2_s_58_fu_1538_p2 <= std_logic_vector(unsigned(p_shl_fu_1520_p3) - unsigned(p_shl1_cast_fu_1534_p1));
        p_shl1_cast_fu_1534_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl1_fu_1527_p3),30));

    p_shl1_fu_1527_p3 <= (data_5_V_read_7_reg_1638_pp0_iter1_reg & ap_const_lv1_0);
    p_shl_fu_1520_p3 <= (data_5_V_read_7_reg_1638_pp0_iter1_reg & ap_const_lv12_0);
    res_V_write_assign_fu_1633_p2 <= std_logic_vector(unsigned(tmp2_reg_1819) + unsigned(tmp9_fu_1629_p2));
    tmp10_fu_1593_p2 <= std_logic_vector(unsigned(tmp11_fu_1584_p2) + unsigned(tmp12_fu_1588_p2));
    tmp11_fu_1584_p2 <= std_logic_vector(unsigned(tmp_30_9_reg_1759) + unsigned(tmp_30_8_reg_1754));
    tmp12_fu_1588_p2 <= std_logic_vector(unsigned(tmp_30_s_reg_1769) + unsigned(tmp_168_fu_1554_p1));
    tmp13_fu_1614_p2 <= std_logic_vector(unsigned(tmp14_fu_1599_p2) + unsigned(tmp15_fu_1608_p2));
    tmp14_fu_1599_p2 <= std_logic_vector(unsigned(tmp_30_10_reg_1779) + unsigned(tmp_30_2_reg_1774));
    tmp15_fu_1608_p2 <= std_logic_vector(signed(tmp_171_fu_1557_p1) + signed(tmp16_fu_1603_p2));
    tmp16_fu_1603_p2 <= std_logic_vector(unsigned(tmp_30_11_reg_1789) + unsigned(ap_const_lv18_3EC0F));
    tmp2_fu_1624_p2 <= std_logic_vector(unsigned(tmp3_reg_1794) + unsigned(tmp6_fu_1620_p2));
    tmp3_fu_1569_p2 <= std_logic_vector(unsigned(tmp4_fu_1560_p2) + unsigned(tmp5_fu_1564_p2));
    tmp4_fu_1560_p2 <= std_logic_vector(unsigned(tmp_30_1_reg_1724) + unsigned(tmp_30_reg_1719));
    tmp5_fu_1564_p2 <= std_logic_vector(unsigned(tmp_30_3_reg_1734) + unsigned(tmp_165_fu_1517_p1));
    tmp6_fu_1620_p2 <= std_logic_vector(unsigned(tmp7_reg_1799) + unsigned(tmp8_reg_1804));
    tmp7_fu_1575_p2 <= std_logic_vector(unsigned(tmp_30_5_fu_1544_p4) + unsigned(tmp_30_4_reg_1739));
    tmp8_fu_1580_p2 <= std_logic_vector(unsigned(tmp_30_7_reg_1749) + unsigned(tmp_30_6_reg_1744));
    tmp9_fu_1629_p2 <= std_logic_vector(unsigned(tmp10_reg_1809_pp0_iter3_reg) + unsigned(tmp13_reg_1814_pp0_iter3_reg));
        tmp_165_fu_1517_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_164_reg_1729),18));

        tmp_168_fu_1554_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_167_reg_1764),18));

        tmp_171_fu_1557_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_170_reg_1784),18));

    tmp_30_5_fu_1544_p4 <= p_Val2_s_58_fu_1538_p2(29 downto 12);
end behav;
