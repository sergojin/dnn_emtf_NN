-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_layer_0_0_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_9_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_10_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_11_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_12_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_13_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_14_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_15_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (17 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of compute_layer_0_0_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv30_35DF : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000011010111011111";
    constant ap_const_lv30_1A81 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000001101010000001";
    constant ap_const_lv30_6EC7 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000110111011000111";
    constant ap_const_lv30_3FFFF04E : STD_LOGIC_VECTOR (29 downto 0) := "111111111111111111000001001110";
    constant ap_const_lv30_3FFFC811 : STD_LOGIC_VECTOR (29 downto 0) := "111111111111111100100000010001";
    constant ap_const_lv30_418B : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000100000110001011";
    constant ap_const_lv30_3FFFB8B0 : STD_LOGIC_VECTOR (29 downto 0) := "111111111111111011100010110000";
    constant ap_const_lv30_3FFFA669 : STD_LOGIC_VECTOR (29 downto 0) := "111111111111111010011001101001";
    constant ap_const_lv30_3FFFE134 : STD_LOGIC_VECTOR (29 downto 0) := "111111111111111110000100110100";
    constant ap_const_lv30_3FFFCAB0 : STD_LOGIC_VECTOR (29 downto 0) := "111111111111111100101010110000";
    constant ap_const_lv30_121E : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000001001000011110";
    constant ap_const_lv30_3FFFD89C : STD_LOGIC_VECTOR (29 downto 0) := "111111111111111101100010011100";
    constant ap_const_lv30_3FFF96BB : STD_LOGIC_VECTOR (29 downto 0) := "111111111111111001011010111011";
    constant ap_const_lv30_337C : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000011001101111100";
    constant ap_const_lv30_4BA4 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000100101110100100";
    constant ap_const_lv30_13EB : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000001001111101011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv18_3E5AC : STD_LOGIC_VECTOR (17 downto 0) := "111110010110101100";

    signal data_13_V_read_4_reg_1548 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal data_12_V_read13_reg_1553 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_reg_1628 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_1_reg_1633 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_2_reg_1638 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_3_reg_1643 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_4_reg_1648 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_5_reg_1653 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_6_reg_1658 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_7_reg_1663 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_8_reg_1668 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_9_reg_1673 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_s_reg_1678 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_10_reg_1683 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_13_reg_1698 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_14_reg_1703 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_11_reg_1708 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_12_reg_1713 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp2_fu_1483_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp2_reg_1718 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp2_reg_1718_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp2_reg_1718_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp5_fu_1497_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp5_reg_1723 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp5_reg_1723_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp5_reg_1723_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp10_fu_1503_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp10_reg_1728 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp10_reg_1728_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp11_fu_1507_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp11_reg_1733 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp11_reg_1733_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp14_fu_1516_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp14_reg_1738 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp12_fu_1525_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp12_reg_1743 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp8_fu_1534_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp8_reg_1748 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_196_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_197_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_198_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_199_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_200_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_201_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_202_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_203_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_204_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_205_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_206_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_207_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_208_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_209_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_210_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_211_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_206_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_198_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_200_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_204_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_197_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_201_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_210_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_211_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_203_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_208_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_196_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_207_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_202_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_199_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_205_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_209_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp4_fu_1479_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp3_fu_1475_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp7_fu_1493_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp6_fu_1489_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp15_fu_1511_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp13_fu_1521_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp9_fu_1530_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp1_fu_1539_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_196_ce : STD_LOGIC;
    signal grp_fu_197_ce : STD_LOGIC;
    signal grp_fu_198_ce : STD_LOGIC;
    signal grp_fu_199_ce : STD_LOGIC;
    signal grp_fu_200_ce : STD_LOGIC;
    signal grp_fu_201_ce : STD_LOGIC;
    signal grp_fu_202_ce : STD_LOGIC;
    signal grp_fu_203_ce : STD_LOGIC;
    signal grp_fu_204_ce : STD_LOGIC;
    signal grp_fu_205_ce : STD_LOGIC;
    signal grp_fu_206_ce : STD_LOGIC;
    signal grp_fu_207_ce : STD_LOGIC;
    signal grp_fu_208_ce : STD_LOGIC;
    signal grp_fu_209_ce : STD_LOGIC;
    signal grp_fu_210_ce : STD_LOGIC;
    signal grp_fu_211_ce : STD_LOGIC;
    signal res_V_write_assign_fu_1543_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal data_0_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_1_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_2_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_3_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_4_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_5_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_6_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_7_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_8_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_9_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_10_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_11_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_12_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_13_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_14_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal data_15_V_read_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (17 downto 0);

    component myproject_mul_18sHfu IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_mul_18sCeG IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_mul_18sThq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_mul_18sNgs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_mul_18sMgi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_mul_18sUhA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_mul_18sFfa IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;



begin
    myproject_mul_18sHfu_U3228 : component myproject_mul_18sHfu
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_10_V_read_int_reg,
        din1 => grp_fu_196_p1,
        ce => grp_fu_196_ce,
        dout => grp_fu_196_p2);

    myproject_mul_18sCeG_U3229 : component myproject_mul_18sCeG
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 14,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_4_V_read_int_reg,
        din1 => grp_fu_197_p1,
        ce => grp_fu_197_ce,
        dout => grp_fu_197_p2);

    myproject_mul_18sThq_U3230 : component myproject_mul_18sThq
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_1_V_read_int_reg,
        din1 => grp_fu_198_p1,
        ce => grp_fu_198_ce,
        dout => grp_fu_198_p2);

    myproject_mul_18sNgs_U3231 : component myproject_mul_18sNgs
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 13,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_15_V_read_int_reg,
        din1 => grp_fu_199_p1,
        ce => grp_fu_199_ce,
        dout => grp_fu_199_p2);

    myproject_mul_18sMgi_U3232 : component myproject_mul_18sMgi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_2_V_read_int_reg,
        din1 => grp_fu_200_p1,
        ce => grp_fu_200_ce,
        dout => grp_fu_200_p2);

    myproject_mul_18sThq_U3233 : component myproject_mul_18sThq
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_5_V_read_int_reg,
        din1 => grp_fu_201_p1,
        ce => grp_fu_201_ce,
        dout => grp_fu_201_p2);

    myproject_mul_18sUhA_U3234 : component myproject_mul_18sUhA
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_14_V_read_int_reg,
        din1 => grp_fu_202_p1,
        ce => grp_fu_202_ce,
        dout => grp_fu_202_p2);

    myproject_mul_18sUhA_U3235 : component myproject_mul_18sUhA
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_8_V_read_int_reg,
        din1 => grp_fu_203_p1,
        ce => grp_fu_203_ce,
        dout => grp_fu_203_p2);

    myproject_mul_18sFfa_U3236 : component myproject_mul_18sFfa
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 14,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_3_V_read_int_reg,
        din1 => grp_fu_204_p1,
        ce => grp_fu_204_ce,
        dout => grp_fu_204_p2);

    myproject_mul_18sMgi_U3237 : component myproject_mul_18sMgi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_12_V_read13_reg_1553,
        din1 => grp_fu_205_p1,
        ce => grp_fu_205_ce,
        dout => grp_fu_205_p2);

    myproject_mul_18sCeG_U3238 : component myproject_mul_18sCeG
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 14,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_0_V_read_int_reg,
        din1 => grp_fu_206_p1,
        ce => grp_fu_206_ce,
        dout => grp_fu_206_p2);

    myproject_mul_18sMgi_U3239 : component myproject_mul_18sMgi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_11_V_read_int_reg,
        din1 => grp_fu_207_p1,
        ce => grp_fu_207_ce,
        dout => grp_fu_207_p2);

    myproject_mul_18sUhA_U3240 : component myproject_mul_18sUhA
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_9_V_read_int_reg,
        din1 => grp_fu_208_p1,
        ce => grp_fu_208_ce,
        dout => grp_fu_208_p2);

    myproject_mul_18sHfu_U3241 : component myproject_mul_18sHfu
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_13_V_read_4_reg_1548,
        din1 => grp_fu_209_p1,
        ce => grp_fu_209_ce,
        dout => grp_fu_209_p2);

    myproject_mul_18sThq_U3242 : component myproject_mul_18sThq
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_6_V_read_int_reg,
        din1 => grp_fu_210_p1,
        ce => grp_fu_210_ce,
        dout => grp_fu_210_p2);

    myproject_mul_18sCeG_U3243 : component myproject_mul_18sCeG
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 14,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_7_V_read_int_reg,
        din1 => grp_fu_211_p1,
        ce => grp_fu_211_ce,
        dout => grp_fu_211_p2);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= res_V_write_assign_fu_1543_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                data_0_V_read_int_reg <= data_0_V_read;
                data_10_V_read_int_reg <= data_10_V_read;
                data_11_V_read_int_reg <= data_11_V_read;
                data_12_V_read_int_reg <= data_12_V_read;
                data_13_V_read_int_reg <= data_13_V_read;
                data_14_V_read_int_reg <= data_14_V_read;
                data_15_V_read_int_reg <= data_15_V_read;
                data_1_V_read_int_reg <= data_1_V_read;
                data_2_V_read_int_reg <= data_2_V_read;
                data_3_V_read_int_reg <= data_3_V_read;
                data_4_V_read_int_reg <= data_4_V_read;
                data_5_V_read_int_reg <= data_5_V_read;
                data_6_V_read_int_reg <= data_6_V_read;
                data_7_V_read_int_reg <= data_7_V_read;
                data_8_V_read_int_reg <= data_8_V_read;
                data_9_V_read_int_reg <= data_9_V_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                data_12_V_read13_reg_1553 <= data_12_V_read_int_reg;
                data_13_V_read_4_reg_1548 <= data_13_V_read_int_reg;
                tmp10_reg_1728 <= tmp10_fu_1503_p2;
                tmp10_reg_1728_pp0_iter3_reg <= tmp10_reg_1728;
                tmp11_reg_1733 <= tmp11_fu_1507_p2;
                tmp11_reg_1733_pp0_iter3_reg <= tmp11_reg_1733;
                tmp12_reg_1743 <= tmp12_fu_1525_p2;
                tmp14_reg_1738 <= tmp14_fu_1516_p2;
                tmp2_reg_1718 <= tmp2_fu_1483_p2;
                tmp2_reg_1718_pp0_iter3_reg <= tmp2_reg_1718;
                tmp2_reg_1718_pp0_iter4_reg <= tmp2_reg_1718_pp0_iter3_reg;
                tmp5_reg_1723 <= tmp5_fu_1497_p2;
                tmp5_reg_1723_pp0_iter3_reg <= tmp5_reg_1723;
                tmp5_reg_1723_pp0_iter4_reg <= tmp5_reg_1723_pp0_iter3_reg;
                tmp8_reg_1748 <= tmp8_fu_1534_p2;
                tmp_38_10_reg_1683 <= grp_fu_207_p2(29 downto 12);
                tmp_38_11_reg_1708 <= grp_fu_205_p2(29 downto 12);
                tmp_38_12_reg_1713 <= grp_fu_209_p2(29 downto 12);
                tmp_38_13_reg_1698 <= grp_fu_202_p2(29 downto 12);
                tmp_38_14_reg_1703 <= grp_fu_199_p2(29 downto 12);
                tmp_38_1_reg_1633 <= grp_fu_198_p2(29 downto 12);
                tmp_38_2_reg_1638 <= grp_fu_200_p2(29 downto 12);
                tmp_38_3_reg_1643 <= grp_fu_204_p2(29 downto 12);
                tmp_38_4_reg_1648 <= grp_fu_197_p2(29 downto 12);
                tmp_38_5_reg_1653 <= grp_fu_201_p2(29 downto 12);
                tmp_38_6_reg_1658 <= grp_fu_210_p2(29 downto 12);
                tmp_38_7_reg_1663 <= grp_fu_211_p2(29 downto 12);
                tmp_38_8_reg_1668 <= grp_fu_203_p2(29 downto 12);
                tmp_38_9_reg_1673 <= grp_fu_208_p2(29 downto 12);
                tmp_38_reg_1628 <= grp_fu_206_p2(29 downto 12);
                tmp_38_s_reg_1678 <= grp_fu_196_p2(29 downto 12);
            end if;
        end if;
    end process;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(res_V_write_assign_fu_1543_p2, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= res_V_write_assign_fu_1543_p2;
        end if; 
    end process;


    grp_fu_196_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_196_ce <= ap_const_logic_1;
        else 
            grp_fu_196_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_196_p1 <= ap_const_lv30_35DF(15 - 1 downto 0);

    grp_fu_197_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_197_ce <= ap_const_logic_1;
        else 
            grp_fu_197_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_197_p1 <= ap_const_lv30_1A81(14 - 1 downto 0);

    grp_fu_198_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_198_ce <= ap_const_logic_1;
        else 
            grp_fu_198_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_198_p1 <= ap_const_lv30_6EC7(16 - 1 downto 0);

    grp_fu_199_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_199_ce <= ap_const_logic_1;
        else 
            grp_fu_199_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_199_p1 <= ap_const_lv30_3FFFF04E(13 - 1 downto 0);

    grp_fu_200_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_200_ce <= ap_const_logic_1;
        else 
            grp_fu_200_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_200_p1 <= ap_const_lv30_3FFFC811(15 - 1 downto 0);

    grp_fu_201_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_201_ce <= ap_const_logic_1;
        else 
            grp_fu_201_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_201_p1 <= ap_const_lv30_418B(16 - 1 downto 0);

    grp_fu_202_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_202_ce <= ap_const_logic_1;
        else 
            grp_fu_202_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_202_p1 <= ap_const_lv30_3FFFB8B0(16 - 1 downto 0);

    grp_fu_203_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_203_ce <= ap_const_logic_1;
        else 
            grp_fu_203_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_203_p1 <= ap_const_lv30_3FFFA669(16 - 1 downto 0);

    grp_fu_204_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_204_ce <= ap_const_logic_1;
        else 
            grp_fu_204_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_204_p1 <= ap_const_lv30_3FFFE134(14 - 1 downto 0);

    grp_fu_205_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_205_ce <= ap_const_logic_1;
        else 
            grp_fu_205_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_205_p1 <= ap_const_lv30_3FFFCAB0(15 - 1 downto 0);

    grp_fu_206_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_206_ce <= ap_const_logic_1;
        else 
            grp_fu_206_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_206_p1 <= ap_const_lv30_121E(14 - 1 downto 0);

    grp_fu_207_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_207_ce <= ap_const_logic_1;
        else 
            grp_fu_207_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_207_p1 <= ap_const_lv30_3FFFD89C(15 - 1 downto 0);

    grp_fu_208_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_208_ce <= ap_const_logic_1;
        else 
            grp_fu_208_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_208_p1 <= ap_const_lv30_3FFF96BB(16 - 1 downto 0);

    grp_fu_209_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_209_ce <= ap_const_logic_1;
        else 
            grp_fu_209_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_209_p1 <= ap_const_lv30_337C(15 - 1 downto 0);

    grp_fu_210_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_210_ce <= ap_const_logic_1;
        else 
            grp_fu_210_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_210_p1 <= ap_const_lv30_4BA4(16 - 1 downto 0);

    grp_fu_211_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_211_ce <= ap_const_logic_1;
        else 
            grp_fu_211_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_211_p1 <= ap_const_lv30_13EB(14 - 1 downto 0);
    res_V_write_assign_fu_1543_p2 <= std_logic_vector(unsigned(tmp8_reg_1748) + unsigned(tmp1_fu_1539_p2));
    tmp10_fu_1503_p2 <= std_logic_vector(unsigned(tmp_38_8_reg_1668) + unsigned(tmp_38_9_reg_1673));
    tmp11_fu_1507_p2 <= std_logic_vector(unsigned(tmp_38_s_reg_1678) + unsigned(tmp_38_10_reg_1683));
    tmp12_fu_1525_p2 <= std_logic_vector(unsigned(tmp14_reg_1738) + unsigned(tmp13_fu_1521_p2));
    tmp13_fu_1521_p2 <= std_logic_vector(unsigned(tmp_38_11_reg_1708) + unsigned(tmp_38_12_reg_1713));
    tmp14_fu_1516_p2 <= std_logic_vector(unsigned(tmp15_fu_1511_p2) + unsigned(tmp_38_13_reg_1698));
    tmp15_fu_1511_p2 <= std_logic_vector(unsigned(tmp_38_14_reg_1703) + unsigned(ap_const_lv18_3E5AC));
    tmp1_fu_1539_p2 <= std_logic_vector(unsigned(tmp5_reg_1723_pp0_iter4_reg) + unsigned(tmp2_reg_1718_pp0_iter4_reg));
    tmp2_fu_1483_p2 <= std_logic_vector(unsigned(tmp4_fu_1479_p2) + unsigned(tmp3_fu_1475_p2));
    tmp3_fu_1475_p2 <= std_logic_vector(unsigned(tmp_38_reg_1628) + unsigned(tmp_38_1_reg_1633));
    tmp4_fu_1479_p2 <= std_logic_vector(unsigned(tmp_38_2_reg_1638) + unsigned(tmp_38_3_reg_1643));
    tmp5_fu_1497_p2 <= std_logic_vector(unsigned(tmp7_fu_1493_p2) + unsigned(tmp6_fu_1489_p2));
    tmp6_fu_1489_p2 <= std_logic_vector(unsigned(tmp_38_4_reg_1648) + unsigned(tmp_38_5_reg_1653));
    tmp7_fu_1493_p2 <= std_logic_vector(unsigned(tmp_38_6_reg_1658) + unsigned(tmp_38_7_reg_1663));
    tmp8_fu_1534_p2 <= std_logic_vector(unsigned(tmp12_reg_1743) + unsigned(tmp9_fu_1530_p2));
    tmp9_fu_1530_p2 <= std_logic_vector(unsigned(tmp11_reg_1733_pp0_iter3_reg) + unsigned(tmp10_reg_1728_pp0_iter3_reg));
end behav;
