Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2019.1 (lin64) Build 2552052 Fri May 24 14:47:09 MDT 2019
| Date         : Mon May 10 23:48:37 2021
| Host         : correlator2.fnal.gov running 64-bit Scientific Linux release 7.9 (Nitrogen)
| Command      : report_drc -file mtf7_core_top_drc_routed.rpt -pb mtf7_core_top_drc_routed.pb -rpx mtf7_core_top_drc_routed.rpx
| Design       : mtf7_core_top
| Device       : xc7vx690tffg1927-2
| Speed File   : -2
| Design State : Fully Routed
---------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 29
+-----------+----------+-------------------------------------------------+------------+
| Rule      | Severity | Description                                     | Violations |
+-----------+----------+-------------------------------------------------+------------+
| DPIP-1    | Warning  | Input pipelining                                | 4          |
| DPOP-2    | Warning  | MREG Output pipelining                          | 20         |
| RTSTAT-10 | Warning  | No routable loads                               | 1          |
| REQP-20   | Advisory | enum_AREG_0_connects_CEA1_GND_connects_CEA2_GND | 4          |
+-----------+----------+-------------------------------------------------+------------+

2. REPORT DETAILS
-----------------
DPIP-1#1 Warning
Input pipelining  
DSP my_test_algo/my_hls_label/grp_dense_latency_0_0_0_1_fu_314/grp_product_fu_1679/r_V_reg_59_reg input my_test_algo/my_hls_label/grp_dense_latency_0_0_0_1_fu_314/grp_product_fu_1679/r_V_reg_59_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP my_test_algo/my_hls_label/grp_dense_latency_0_0_0_1_fu_314/grp_product_fu_1707/r_V_reg_59_reg input my_test_algo/my_hls_label/grp_dense_latency_0_0_0_1_fu_314/grp_product_fu_1707/r_V_reg_59_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP my_test_algo/my_hls_label/grp_dense_latency_0_0_0_1_fu_314/grp_product_fu_1789/r_V_reg_59_reg input my_test_algo/my_hls_label/grp_dense_latency_0_0_0_1_fu_314/grp_product_fu_1789/r_V_reg_59_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP my_test_algo/my_hls_label/grp_dense_latency_0_0_0_1_fu_314/grp_product_fu_1921/r_V_reg_59_reg input my_test_algo/my_hls_label/grp_dense_latency_0_0_0_1_fu_314/grp_product_fu_1921/r_V_reg_59_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_10_fu_2548_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_10_fu_2548_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_11_fu_2553_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_11_fu_2553_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_12_fu_2558_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_12_fu_2558_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_13_fu_2563_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_13_fu_2563_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_14_fu_2568_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_14_fu_2568_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_15_fu_2573_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_15_fu_2573_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_16_fu_2578_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_16_fu_2578_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_17_fu_2583_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_17_fu_2583_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_18_fu_2588_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_18_fu_2588_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_19_fu_2593_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_19_fu_2593_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_20_fu_2598_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_20_fu_2598_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_21_fu_2603_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_21_fu_2603_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_22_fu_2608_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_22_fu_2608_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_23_fu_2613_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_23_fu_2613_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#15 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_4_fu_2523_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_4_fu_2523_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#16 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_5_fu_2528_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_5_fu_2528_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#17 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_6_fu_2533_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_6_fu_2533_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#18 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_7_fu_2538_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_7_fu_2538_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#19 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_8_fu_2543_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_8_fu_2543_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#20 Warning
MREG Output pipelining  
DSP my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_fu_2454_p2 multiplier stage my_test_algo/my_hls_label/grp_normalize_0_0_0_0_0_3_fu_574/add_ln703_fu_2454_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

RTSTAT-10#1 Warning
No routable loads  
30 net(s) have no routable loads. The problem bus(es) and/or net(s) are imem/din_w[36], imem/din_w[37], imem/din_w[38], imem/din_w[39], imem/din_w[40], imem/din_w[41], imem/din_w[42], imem/din_w[43], imem/din_w[44], imem/din_w[45], imem/din_w[46], imem/din_w[47], imem/din_w[48], imem/din_w[49], imem/din_w[50] (the first 15 of 30 listed).
Related violations: <none>

REQP-20#1 Advisory
enum_AREG_0_connects_CEA1_GND_connects_CEA2_GND  
my_test_algo/my_hls_label/grp_dense_latency_0_0_0_1_fu_314/grp_product_fu_1679/r_V_reg_59_reg: When DSP48E1 attribute AREG is set to 0, the CEA1 and CEA2 pins should be tied to GND to save power.
Related violations: <none>

REQP-20#2 Advisory
enum_AREG_0_connects_CEA1_GND_connects_CEA2_GND  
my_test_algo/my_hls_label/grp_dense_latency_0_0_0_1_fu_314/grp_product_fu_1707/r_V_reg_59_reg: When DSP48E1 attribute AREG is set to 0, the CEA1 and CEA2 pins should be tied to GND to save power.
Related violations: <none>

REQP-20#3 Advisory
enum_AREG_0_connects_CEA1_GND_connects_CEA2_GND  
my_test_algo/my_hls_label/grp_dense_latency_0_0_0_1_fu_314/grp_product_fu_1789/r_V_reg_59_reg: When DSP48E1 attribute AREG is set to 0, the CEA1 and CEA2 pins should be tied to GND to save power.
Related violations: <none>

REQP-20#4 Advisory
enum_AREG_0_connects_CEA1_GND_connects_CEA2_GND  
my_test_algo/my_hls_label/grp_dense_latency_0_0_0_1_fu_314/grp_product_fu_1921/r_V_reg_59_reg: When DSP48E1 attribute AREG is set to 0, the CEA1 and CEA2 pins should be tied to GND to save power.
Related violations: <none>


